{"version":3,"sources":["../src/battle.ts"],"names":["Pokemon","data","side","name","speciesForme","ident","details","searchid","slot","fainted","hp","maxhp","level","gender","shiny","hpcolor","moves","ability","baseAbility","item","itemEffect","prevItem","prevItemEffect","boosts","status","statusStage","volatiles","turnstatuses","movestatuses","lastMove","moveTrack","statusData","sleepTurns","toxicTurns","sprite","battle","scene","addPokemonSprite","isActive","active","includes","getHPColor","ratio","getHPColorClass","getPixelRange","pixels","color","epsilon","getFormattedRange","range","precision","separator","percentage","Math","abs","floor","toFixed","lower","upper","ceil","getDamageRange","damage","length","undefined","oldrange","newrange","r","healthParse","hpstring","parsedamage","heal","parenIndex","lastIndexOf","parseFloat","isNaN","ret","percent","round","substr","oldhp","oldmaxhp","oldwidth","hpWidth","oldcolor","parseHealth","oldnum","delta","deltawidth","checkDetails","indexOf","replace","getIdent","slots","removeVolatile","volatile","removeEffect","hasVolatile","addVolatile","args","addEffect","removeTurnstatus","hasTurnstatus","addTurnstatus","toID","clearTurnstatuses","id","updateStatbar","removeMovestatus","hasMovestatus","addMovestatus","clearMovestatuses","clearVolatiles","clearEffects","rememberMove","moveName","pp","recursionSource","Dex","get","charAt","transform","entry","push","rememberAbility","isNotBase","abilities","getBoost","boostStat","boostStatTable","atk","def","spa","spd","spe","accuracy","evasion","spc","isRBY","gen","tier","goodBoostTable","badBoostTable","getWeightKg","serverPokemon","autotomizeFactor","autotomize","max","getSpecies","weightkg","getBoostType","clearVolatile","i","splice","copyVolatileFrom","pokemon","copyAll","removeTransform","copyTypesFrom","getTypes","types","addedType","join","typechange","split","filter","typeName","typeadd","isGrounded","hasPseudoWeather","effectiveAbility","getTypeList","dex","ngasActive","isPermanent","concat","getSpeciesForme","formechange","species","getBaseSpecies","reset","maxWidth","getHPText","destroy","Side","n","sideid","isFar","foe","ally","avatar","rating","totalPokemon","x","y","z","missedPokemon","wisher","lastPokemon","sideConditions","rollTrainerSprites","sprites","random","behindx","offset","behindy","leftof","behind","clearPokemon","setAvatar","setName","addSideCondition","effect","condition","removeSideCondition","addPokemon","replaceSlot","oldItem","parseDetails","poke","speciesClause","existingTable","toRemove","newMegaZor","poke1i","poke1","poke1UnMegaSearchId","poke2i","poke2","illusionFound","curPoke","updateSidebar","switchIn","animSummon","dragIn","oldpokemon","animDragOut","animDragIn","animUnsummon","switchOut","kwArgs","getEffect","from","log","swapTo","target","oslot","swapWith","nslot","faint","animFaint","Battle","options","sidesSwitched","stepQueue","preemptStepQueue","waitForAnimations","currentStep","seeking","activeMoveIsSpread","subscription","mute","messageFadeTime","messageShownTime","turnsSinceMoved","turn","atQueueEnd","started","ended","isReplay","usesUpkeep","weather","pseudoWeather","weatherTimeLeft","weatherMinTimeLeft","mySide","nearSide","farSide","p1","p2","p3","p4","pokemonControlled","sides","myPokemon","myAllyPokemon","teamPreviewCount","gameType","rated","rules","isBlitz","endLastTurnPending","totalTimeLeft","graceTimeLeft","kickingInactive","roomid","hardcoreMode","ignoreNicks","prefs","ignoreOpponent","ignoreSpects","debug","joinButtons","paused","$frame","$logFrame","BattleScene","BattleSceneStub","Error","resetStep","subscribe","listener","removePseudoWeather","updateWeather","addPseudoWeather","minTimeLeft","timeLeft","pseudoWeatherName","abilityActive","a","pause","resetTurnsSinceMoved","nextStep","preempt","add","resetToCurrentTurn","seekTurn","Infinity","switchSides","setPerspective","startsWith","start","winner","prematureEnd","endLastTurn","updateStatbars","setHardcoreMode","mode","updateSidebars","setTurn","turnNum","updateTurnCounters","incrementTurn","stopSeeking","updateAcceleration","changeWeather","weatherName","isUpkeep","upkeepWeather","isExtremeWeather","activateAbility","swapSideConditions","side1","side2","pWeather","cond","useMove","move","fromeffect","callerMoveForPressure","isZ","items","zMoveFrom","slice","window","BattleItems","zMoveType","type","foeTargets","moveTarget","pressureTarget","animateMove","spread","still","miss","notarget","prepare","anim","runPrepareAnim","usedMove","runMoveAnim","targets","hitTarget","curTarget","getPokemon","cantUseMove","BattleStatusAnims","runStatusAnim","resultAnim","runOtherAnim","animReset","effectOrName","effectType","abilityActivateAnim","runMinor","nextArgs","nextKwargs","then","silent","closeMessagebar","simult","CONSUMED","ofpoke","of","itemPoke","damageinfo","hover","damageAnim","trackedMove","runResidualAnim","healAnim","k","cpoke","formattedRange","diff","stat","amount","parseInt","stats","tmp","frompoke","volatilesToCopy","timeOffset","Config","server","afd","moveid","thaw","updateStatbarIfExists","eat","weaken","fail","wait","newSpeciesForme","commaIndex","trim","animTransform","tpoke","targetForme","endsWith","isCustomAnim","sanitizeName","typeAnim","already","block","interrupt","time","Number","number","pokeability","targetability","ability2","foeActive","maybeTarget","broken","getSide","upkeep","maxTimeLeft","pwID","checkActive","beforeMove","afterMove","pokemonid","output","isTeamPreview","splitDetails","pop","curhp","colorchar","parsePokemonId","siden","test","slotChart","b","c","d","e","f","getSwitchedPokemon","parsedPokemonid","rememberTeamPreviewPokemon","findCorrespondingPokemon","isInactive","sidename","command","instantAdd","run","runMajor","resetSides","mod","updateGen","ruleName","totalTime","graceTime","hasIndex","userid","app","user","room","rooms","BattleTextParser","parseNameParts","toUserid","users","userCount","userList","updateUserCount","updateNoUsersOnline","remove","oldid","set","away","hideJoinButtons","teamPreview","targetIndex","forGen","setFrameHTML","BattleLog","sanitizeHTML","setControlsHTML","str","shift","preemptCatchup","parseBattleLine","maybeCloseMessagebar","nextLine","err","stack","line","updateBgm","play","resume","skipTurn","forceReset","animationOn","animationOff","shouldStep","startAnimations","animations","finishAnimations","interruptionCount","done","setQueue","queue","setMute","require","global"],"mappings":"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","sourcesContent":["/**\r\n * Pokemon Showdown Battle\r\n *\r\n * This is the main file for handling battle animations\r\n *\r\n * Licensing note: PS's client has complicated licensing:\r\n * - The client as a whole is AGPLv3\r\n * - The battle replay/animation engine (battle-*.ts) by itself is MIT\r\n *\r\n * Layout:\r\n *\r\n * - Battle\r\n *   - Side\r\n *     - Pokemon\r\n *   - BattleScene\r\n *     - BattleLog\r\n *       - BattleTextParser\r\n *\r\n * When a Battle receives a message, it splits the message into tokens\r\n * and parses what happens, updating its own state, and then telling\r\n * BattleScene to do any relevant animations. The tokens then get\r\n * passed directly into BattleLog. If the message is an in-battle\r\n * message, it'll be extracted by BattleTextParser, which adds it to\r\n * both the battle log itself, as well as the messagebar.\r\n *\r\n * @author Guangcong Luo <guangcongluo@gmail.com>\r\n * @license MIT\r\n */\r\n\r\nimport {BattleSceneStub} from './battle-scene-stub';\r\nimport {BattleLog} from './battle-log';\r\nimport {BattleScene, PokemonSprite, BattleStatusAnims} from './battle-animations';\r\n\r\n/** [id, element?, ...misc] */\r\nexport type EffectState = any[] & {0: ID};\r\n/** [name, minTimeLeft, maxTimeLeft] */\r\nexport type WeatherState = [string, number, number];\r\nexport type HPColor = 'r' | 'y' | 'g';\r\n\r\nexport class Pokemon implements PokemonDetails, PokemonHealth {\r\n\tname = '';\r\n\tspeciesForme = '';\r\n\r\n\t/**\r\n\t * A string representing information extractable from textual\r\n\t * messages: side, nickname.\r\n\t *\r\n\t * Will be the empty string between Team Preview and the first\r\n\t * switch-in.\r\n\t *\r\n\t * Examples: `p1: Unown` or `p2: Sparky`\r\n\t */\r\n\tident = '';\r\n\t/**\r\n\t * A string representing visible information not included in\r\n\t * ident: species, level, gender, shininess. Level is left off\r\n\t * if it's 100; gender is left off if it's genderless.\r\n\t *\r\n\t * Note: Can be partially filled out in Team Preview, because certain\r\n\t * forme information and shininess isn't visible there. In those\r\n\t * cases, details can change during the first switch-in, but will\r\n\t * otherwise not change over the course of a game.\r\n\t *\r\n\t * Examples: `Mimikyu, L50, F`, `Steelix, M, shiny`\r\n\t */\r\n\tdetails = '';\r\n\t/**\r\n\t * `` `${ident}|${details}` ``. Tracked for ease of searching.\r\n\t *\r\n\t * As with ident, blank before the first switch-in, and will only\r\n\t * change during the first switch-in.\r\n\t */\r\n\tsearchid = '';\r\n\r\n\tside: Side;\r\n\tslot = 0;\r\n\r\n\tfainted = false;\r\n\thp = 0;\r\n\tmaxhp = 1000;\r\n\tlevel = 100;\r\n\tgender: GenderName = 'N';\r\n\tshiny = false;\r\n\r\n\thpcolor: HPColor = 'g';\r\n\tmoves: string[] = [];\r\n\tability = '';\r\n\tbaseAbility = '';\r\n\titem = '';\r\n\titemEffect = '';\r\n\tprevItem = '';\r\n\tprevItemEffect = '';\r\n\r\n\tboosts: {[stat: string]: number} = {};\r\n\tstatus: StatusName | 'tox' | '' | '???' = '';\r\n\tstatusStage = 0;\r\n\tvolatiles: {[effectid: string]: EffectState} = {};\r\n\tturnstatuses: {[effectid: string]: EffectState} = {};\r\n\tmovestatuses: {[effectid: string]: EffectState} = {};\r\n\tlastMove = '';\r\n\r\n\t/** [[moveName, ppUsed]] */\r\n\tmoveTrack: [string, number][] = [];\r\n\tstatusData = {sleepTurns: 0, toxicTurns: 0};\r\n\r\n\tsprite: PokemonSprite;\r\n\r\n\tconstructor(data: PokemonDetails, side: Side) {\r\n\t\tthis.side = side;\r\n\t\tthis.speciesForme = data.speciesForme;\r\n\r\n\t\tthis.details = data.details;\r\n\t\tthis.name = data.name;\r\n\t\tthis.level = data.level;\r\n\t\tthis.shiny = data.shiny;\r\n\t\tthis.gender = data.gender || 'N';\r\n\t\tthis.ident = data.ident;\r\n\t\tthis.searchid = data.searchid;\r\n\r\n\t\tthis.sprite = side.battle.scene.addPokemonSprite(this);\r\n\t}\r\n\r\n\tisActive() {\r\n\t\treturn this.side.active.includes(this);\r\n\t}\r\n\r\n\t/** @deprecated */\r\n\tprivate getHPColor(): HPColor {\r\n\t\tif (this.hpcolor) return this.hpcolor;\r\n\t\tlet ratio = this.hp / this.maxhp;\r\n\t\tif (ratio > 0.5) return 'g';\r\n\t\tif (ratio > 0.2) return 'y';\r\n\t\treturn 'r';\r\n\t}\r\n\t/** @deprecated */\r\n\tprivate getHPColorClass() {\r\n\t\tswitch (this.getHPColor()) {\r\n\t\tcase 'y': return 'hpbar hpbar-yellow';\r\n\t\tcase 'r': return 'hpbar hpbar-red';\r\n\t\t}\r\n\t\treturn 'hpbar';\r\n\t}\r\n\tstatic getPixelRange(pixels: number, color: HPColor | ''): [number, number] {\r\n\t\tlet epsilon = 0.5 / 714;\r\n\r\n\t\tif (pixels === 0) return [0, 0];\r\n\t\tif (pixels === 1) return [0 + epsilon, 2 / 48 - epsilon];\r\n\t\tif (pixels === 9) {\r\n\t\t\tif (color === 'y') { // ratio is > 0.2\r\n\t\t\t\treturn [0.2 + epsilon, 10 / 48 - epsilon];\r\n\t\t\t} else { // ratio is <= 0.2\r\n\t\t\t\treturn [9 / 48, 0.2];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (pixels === 24) {\r\n\t\t\tif (color === 'g') { // ratio is > 0.5\r\n\t\t\t\treturn [0.5 + epsilon, 25 / 48 - epsilon];\r\n\t\t\t} else { // ratio is exactly 0.5\r\n\t\t\t\treturn [0.5, 0.5];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (pixels === 48) return [1, 1];\r\n\r\n\t\treturn [pixels / 48, (pixels + 1) / 48 - epsilon];\r\n\t}\r\n\tstatic getFormattedRange(range: [number, number], precision: number, separator: string) {\r\n\t\tif (range[0] === range[1]) {\r\n\t\t\tlet percentage = Math.abs(range[0] * 100);\r\n\t\t\tif (Math.floor(percentage) === percentage) {\r\n\t\t\t\treturn percentage + '%';\r\n\t\t\t}\r\n\t\t\treturn percentage.toFixed(precision) + '%';\r\n\t\t}\r\n\t\tlet lower;\r\n\t\tlet upper;\r\n\t\tif (precision === 0) {\r\n\t\t\tlower = Math.floor(range[0] * 100);\r\n\t\t\tupper = Math.ceil(range[1] * 100);\r\n\t\t} else {\r\n\t\t\tlower = (range[0] * 100).toFixed(precision);\r\n\t\t\tupper = (range[1] * 100).toFixed(precision);\r\n\t\t}\r\n\t\treturn '' + lower + separator + upper + '%';\r\n\t}\r\n\t// Returns [min, max] damage dealt as a proportion of total HP from 0 to 1\r\n\tgetDamageRange(damage: any): [number, number] {\r\n\t\tif (damage[1] !== 48) {\r\n\t\t\tlet ratio = damage[0] / damage[1];\r\n\t\t\treturn [ratio, ratio];\r\n\t\t} else if (damage.length === undefined) {\r\n\t\t\t// wrong pixel damage.\r\n\t\t\t// this case exists for backward compatibility only.\r\n\t\t\treturn [damage[2] / 100, damage[2] / 100];\r\n\t\t}\r\n\t\t// pixel damage\r\n\t\tlet oldrange = Pokemon.getPixelRange(damage[3], damage[4]);\r\n\t\tlet newrange = Pokemon.getPixelRange(damage[3] + damage[0], this.hpcolor);\r\n\t\tif (damage[0] === 0) {\r\n\t\t\t// no change in displayed pixel width\r\n\t\t\treturn [0, newrange[1] - newrange[0]];\r\n\t\t}\r\n\t\tif (oldrange[0] < newrange[0]) { // swap order\r\n\t\t\tlet r = oldrange;\r\n\t\t\toldrange = newrange;\r\n\t\t\tnewrange = r;\r\n\t\t}\r\n\t\treturn [oldrange[0] - newrange[1], oldrange[1] - newrange[0]];\r\n\t}\r\n\thealthParse(hpstring: string, parsedamage?: boolean, heal?: boolean):\r\n\t\t[number, number, number] | [number, number, number, number, HPColor] | null {\r\n\t\t// returns [delta, denominator, percent(, oldnum, oldcolor)] or null\r\n\t\tif (!hpstring || !hpstring.length) return null;\r\n\t\tlet parenIndex = hpstring.lastIndexOf('(');\r\n\t\tif (parenIndex >= 0) {\r\n\t\t\t// old style damage and health reporting\r\n\t\t\tif (parsedamage) {\r\n\t\t\t\tlet damage = parseFloat(hpstring);\r\n\t\t\t\t// unusual check preseved for backward compatbility\r\n\t\t\t\tif (isNaN(damage)) damage = 50;\r\n\t\t\t\tif (heal) {\r\n\t\t\t\t\tthis.hp += this.maxhp * damage / 100;\r\n\t\t\t\t\tif (this.hp > this.maxhp) this.hp = this.maxhp;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.hp -= this.maxhp * damage / 100;\r\n\t\t\t\t}\r\n\t\t\t\t// parse the absolute health information\r\n\t\t\t\tlet ret = this.healthParse(hpstring);\r\n\t\t\t\tif (ret && (ret[1] === 100)) {\r\n\t\t\t\t\t// support for old replays with nearest-100th damage and health\r\n\t\t\t\t\treturn [damage, 100, damage];\r\n\t\t\t\t}\r\n\t\t\t\t// complicated expressions preserved for backward compatibility\r\n\t\t\t\tlet percent = Math.round(Math.ceil(damage * 48 / 100) / 48 * 100);\r\n\t\t\t\tlet pixels = Math.ceil(damage * 48 / 100);\r\n\t\t\t\treturn [pixels, 48, percent];\r\n\t\t\t}\r\n\t\t\tif (hpstring.substr(hpstring.length - 1) !== ')') {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\thpstring = hpstring.substr(parenIndex + 1, hpstring.length - parenIndex - 2);\r\n\t\t}\r\n\r\n\t\tlet oldhp = this.fainted ? 0 : (this.hp || 1);\r\n\t\tlet oldmaxhp = this.maxhp;\r\n\t\tlet oldwidth = this.hpWidth(100);\r\n\t\tlet oldcolor = this.hpcolor;\r\n\r\n\t\tthis.side.battle.parseHealth(hpstring, this);\r\n\t\tif (oldmaxhp === 0) { // max hp not known before parsing this message\r\n\t\t\toldmaxhp = oldhp = this.maxhp;\r\n\t\t}\r\n\r\n\t\tlet oldnum = oldhp ? (Math.floor(this.maxhp * oldhp / oldmaxhp) || 1) : 0;\r\n\t\tlet delta = this.hp - oldnum;\r\n\t\tlet deltawidth = this.hpWidth(100) - oldwidth;\r\n\t\treturn [delta, this.maxhp, deltawidth, oldnum, oldcolor];\r\n\t}\r\n\tcheckDetails(details?: string) {\r\n\t\tif (!details) return false;\r\n\t\tif (details === this.details) return true;\r\n\t\tif (this.searchid) return false;\r\n\t\tif (details.indexOf(', shiny') >= 0) {\r\n\t\t\tif (this.checkDetails(details.replace(', shiny', ''))) return true;\r\n\t\t}\r\n\t\t// the actual forme was hidden on Team Preview\r\n\t\tdetails = details.replace(/(-[A-Za-z0-9-]+)?(, |$)/, '-*$2');\r\n\t\treturn (details === this.details);\r\n\t}\r\n\tgetIdent() {\r\n\t\tlet slots = ['a', 'b', 'c', 'd', 'e', 'f'];\r\n\t\treturn this.ident.substr(0, 2) + slots[this.slot] + this.ident.substr(2);\r\n\t}\r\n\tremoveVolatile(volatile: ID) {\r\n\t\tthis.side.battle.scene.removeEffect(this, volatile);\r\n\t\tif (!this.hasVolatile(volatile)) return;\r\n\t\tdelete this.volatiles[volatile];\r\n\t}\r\n\taddVolatile(volatile: ID, ...args: any[]) {\r\n\t\tif (this.hasVolatile(volatile) && !args.length) return;\r\n\t\tthis.volatiles[volatile] = [volatile, ...args] as EffectState;\r\n\t\tthis.side.battle.scene.addEffect(this, volatile);\r\n\t}\r\n\thasVolatile(volatile: ID) {\r\n\t\treturn !!this.volatiles[volatile];\r\n\t}\r\n\tremoveTurnstatus(volatile: ID) {\r\n\t\tthis.side.battle.scene.removeEffect(this, volatile);\r\n\t\tif (!this.hasTurnstatus(volatile)) return;\r\n\t\tdelete this.turnstatuses[volatile];\r\n\t}\r\n\taddTurnstatus(volatile: ID) {\r\n\t\tvolatile = toID(volatile);\r\n\t\tthis.side.battle.scene.addEffect(this, volatile);\r\n\t\tif (this.hasTurnstatus(volatile)) return;\r\n\t\tthis.turnstatuses[volatile] = [volatile];\r\n\t}\r\n\thasTurnstatus(volatile: ID) {\r\n\t\treturn !!this.turnstatuses[volatile];\r\n\t}\r\n\tclearTurnstatuses() {\r\n\t\tfor (let id in this.turnstatuses) {\r\n\t\t\tthis.removeTurnstatus(id as ID);\r\n\t\t}\r\n\t\tthis.turnstatuses = {};\r\n\t\tthis.side.battle.scene.updateStatbar(this);\r\n\t}\r\n\tremoveMovestatus(volatile: ID) {\r\n\t\tthis.side.battle.scene.removeEffect(this, volatile);\r\n\t\tif (!this.hasMovestatus(volatile)) return;\r\n\t\tdelete this.movestatuses[volatile];\r\n\t}\r\n\taddMovestatus(volatile: ID) {\r\n\t\tvolatile = toID(volatile);\r\n\t\tif (this.hasMovestatus(volatile)) return;\r\n\t\tthis.movestatuses[volatile] = [volatile];\r\n\t\tthis.side.battle.scene.addEffect(this, volatile);\r\n\t}\r\n\thasMovestatus(volatile: ID) {\r\n\t\treturn !!this.movestatuses[volatile];\r\n\t}\r\n\tclearMovestatuses() {\r\n\t\tfor (let id in this.movestatuses) {\r\n\t\t\tthis.removeMovestatus(id as ID);\r\n\t\t}\r\n\t\tthis.movestatuses = {};\r\n\t}\r\n\tclearVolatiles() {\r\n\t\tthis.volatiles = {};\r\n\t\tthis.clearTurnstatuses();\r\n\t\tthis.clearMovestatuses();\r\n\t\tthis.side.battle.scene.clearEffects(this);\r\n\t}\r\n\trememberMove(moveName: string, pp = 1, recursionSource?: string) {\r\n\t\tif (recursionSource === this.ident) return;\r\n\t\tmoveName = Dex.moves.get(moveName).name;\r\n\t\tif (moveName.charAt(0) === '*') return;\r\n\t\tif (moveName === 'Struggle') return;\r\n\t\tif (this.volatiles.transform) {\r\n\t\t\t// make sure there is no infinite recursion if both Pokemon are transformed into each other\r\n\t\t\tif (!recursionSource) recursionSource = this.ident;\r\n\t\t\tthis.volatiles.transform[1].rememberMove(moveName, 0, recursionSource);\r\n\t\t\tmoveName = '*' + moveName;\r\n\t\t}\r\n\t\tfor (const entry of this.moveTrack) {\r\n\t\t\tif (moveName === entry[0]) {\r\n\t\t\t\tentry[1] += pp;\r\n\t\t\t\tif (entry[1] < 0) entry[1] = 0;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.moveTrack.push([moveName, pp]);\r\n\t}\r\n\trememberAbility(ability: string, isNotBase?: boolean) {\r\n\t\tability = Dex.abilities.get(ability).name;\r\n\t\tthis.ability = ability;\r\n\t\tif (!this.baseAbility && !isNotBase) {\r\n\t\t\tthis.baseAbility = ability;\r\n\t\t}\r\n\t}\r\n\tgetBoost(boostStat: BoostStatName) {\r\n\t\tlet boostStatTable = {\r\n\t\t\tatk: 'Atk',\r\n\t\t\tdef: 'Def',\r\n\t\t\tspa: 'SpA',\r\n\t\t\tspd: 'SpD',\r\n\t\t\tspe: 'Spe',\r\n\t\t\taccuracy: 'Accuracy',\r\n\t\t\tevasion: 'Evasion',\r\n\t\t\tspc: 'Spc',\r\n\t\t};\r\n\t\tif (!this.boosts[boostStat]) {\r\n\t\t\treturn '1&times;&nbsp;' + boostStatTable[boostStat];\r\n\t\t}\r\n\t\tif (this.boosts[boostStat] > 6) this.boosts[boostStat] = 6;\r\n\t\tif (this.boosts[boostStat] < -6) this.boosts[boostStat] = -6;\r\n\t\tconst isRBY = this.side.battle.gen <= 1 && !this.side.battle.tier.includes('Stadium');\r\n\t\tif (!isRBY && (boostStat === 'accuracy' || boostStat === 'evasion')) {\r\n\t\t\tif (this.boosts[boostStat] > 0) {\r\n\t\t\t\tlet goodBoostTable = [\r\n\t\t\t\t\t'1&times;', '1.33&times;', '1.67&times;', '2&times;', '2.33&times;', '2.67&times;', '3&times;',\r\n\t\t\t\t];\r\n\t\t\t\t// let goodBoostTable = ['Normal', '+1', '+2', '+3', '+4', '+5', '+6'];\r\n\t\t\t\treturn '' + goodBoostTable[this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\r\n\t\t\t}\r\n\t\t\tlet badBoostTable = [\r\n\t\t\t\t'1&times;', '0.75&times;', '0.6&times;', '0.5&times;', '0.43&times;', '0.38&times;', '0.33&times;',\r\n\t\t\t];\r\n\t\t\t// let badBoostTable = ['Normal', '&minus;1', '&minus;2', '&minus;3', '&minus;4', '&minus;5', '&minus;6'];\r\n\t\t\treturn '' + badBoostTable[-this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\r\n\t\t}\r\n\t\tif (this.boosts[boostStat] > 0) {\r\n\t\t\tlet goodBoostTable = [\r\n\t\t\t\t'1&times;', '1.5&times;', '2&times;', '2.5&times;', '3&times;', '3.5&times;', '4&times;',\r\n\t\t\t];\r\n\t\t\t// let goodBoostTable = ['Normal', '+1', '+2', '+3', '+4', '+5', '+6'];\r\n\t\t\treturn '' + goodBoostTable[this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\r\n\t\t}\r\n\t\tlet badBoostTable = [\r\n\t\t\t'1&times;', '0.67&times;', '0.5&times;', '0.4&times;', '0.33&times;', '0.29&times;', '0.25&times;',\r\n\t\t];\r\n\t\t// let badBoostTable = ['Normal', '&minus;1', '&minus;2', '&minus;3', '&minus;4', '&minus;5', '&minus;6'];\r\n\t\treturn '' + badBoostTable[-this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\r\n\t}\r\n\tgetWeightKg(serverPokemon?: ServerPokemon) {\r\n\t\tlet autotomizeFactor = this.volatiles.autotomize?.[1] * 100 || 0;\r\n\t\treturn Math.max(this.getSpecies(serverPokemon).weightkg - autotomizeFactor, 0.1);\r\n\t}\r\n\tgetBoostType(boostStat: BoostStatName) {\r\n\t\tif (!this.boosts[boostStat]) return 'neutral';\r\n\t\tif (this.boosts[boostStat] > 0) return 'good';\r\n\t\treturn 'bad';\r\n\t}\r\n\tclearVolatile() {\r\n\t\tthis.ability = this.baseAbility;\r\n\t\tthis.boosts = {};\r\n\t\tthis.clearVolatiles();\r\n\t\tfor (let i = 0; i < this.moveTrack.length; i++) {\r\n\t\t\tif (this.moveTrack[i][0].charAt(0) === '*') {\r\n\t\t\t\tthis.moveTrack.splice(i, 1);\r\n\t\t\t\ti--;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// this.lastMove = '';\r\n\t\tthis.statusStage = 0;\r\n\t\tthis.statusData.toxicTurns = 0;\r\n\t\tif (this.side.battle.gen === 5) this.statusData.sleepTurns = 0;\r\n\t}\r\n\t/**\r\n\t * copyAll = false means Baton Pass,\r\n\t * copyAll = true means Illusion breaking\r\n\t */\r\n\tcopyVolatileFrom(pokemon: Pokemon, copyAll?: boolean) {\r\n\t\tthis.boosts = pokemon.boosts;\r\n\t\tthis.volatiles = pokemon.volatiles;\r\n\t\t// this.lastMove = pokemon.lastMove; // I think\r\n\t\tif (!copyAll) {\r\n\t\t\tdelete this.volatiles['airballoon'];\r\n\t\t\tdelete this.volatiles['attract'];\r\n\t\t\tdelete this.volatiles['autotomize'];\r\n\t\t\tdelete this.volatiles['disable'];\r\n\t\t\tdelete this.volatiles['encore'];\r\n\t\t\tdelete this.volatiles['foresight'];\r\n\t\t\tdelete this.volatiles['gmaxchistrike'];\r\n\t\t\tdelete this.volatiles['imprison'];\r\n\t\t\tdelete this.volatiles['laserfocus'];\r\n\t\t\tdelete this.volatiles['mimic'];\r\n\t\t\tdelete this.volatiles['miracleeye'];\r\n\t\t\tdelete this.volatiles['nightmare'];\r\n\t\t\tdelete this.volatiles['smackdown'];\r\n\t\t\tdelete this.volatiles['stockpile1'];\r\n\t\t\tdelete this.volatiles['stockpile2'];\r\n\t\t\tdelete this.volatiles['stockpile3'];\r\n\t\t\tdelete this.volatiles['torment'];\r\n\t\t\tdelete this.volatiles['typeadd'];\r\n\t\t\tdelete this.volatiles['typechange'];\r\n\t\t\tdelete this.volatiles['yawn'];\r\n\t\t}\r\n\t\tdelete this.volatiles['transform'];\r\n\t\tdelete this.volatiles['formechange'];\r\n\r\n\t\tpokemon.boosts = {};\r\n\t\tpokemon.volatiles = {};\r\n\t\tpokemon.side.battle.scene.removeTransform(pokemon);\r\n\t\tpokemon.statusStage = 0;\r\n\t}\r\n\tcopyTypesFrom(pokemon: Pokemon) {\r\n\t\tconst [types, addedType] = pokemon.getTypes();\r\n\t\tthis.addVolatile('typechange' as ID, types.join('/'));\r\n\t\tif (addedType) {\r\n\t\t\tthis.addVolatile('typeadd' as ID, addedType);\r\n\t\t} else {\r\n\t\t\tthis.removeVolatile('typeadd' as ID);\r\n\t\t}\r\n\t}\r\n\tgetTypes(serverPokemon?: ServerPokemon): [ReadonlyArray<TypeName>, TypeName | ''] {\r\n\t\tlet types: ReadonlyArray<TypeName>;\r\n\t\tif (this.volatiles.typechange) {\r\n\t\t\ttypes = this.volatiles.typechange[1].split('/');\r\n\t\t} else {\r\n\t\t\ttypes = this.getSpecies(serverPokemon).types;\r\n\t\t}\r\n\t\tif (this.hasTurnstatus('roost' as ID) && types.includes('Flying')) {\r\n\t\t\ttypes = types.filter(typeName => typeName !== 'Flying');\r\n\t\t\tif (!types.length) types = ['Normal'];\r\n\t\t}\r\n\t\tconst addedType = (this.volatiles.typeadd ? this.volatiles.typeadd[1] : '');\r\n\t\treturn [types, addedType];\r\n\t}\r\n\tisGrounded(serverPokemon?: ServerPokemon) {\r\n\t\tconst battle = this.side.battle;\r\n\t\tif (battle.hasPseudoWeather('Gravity')) {\r\n\t\t\treturn true;\r\n\t\t} else if (this.volatiles['ingrain'] && battle.gen >= 4) {\r\n\t\t\treturn true;\r\n\t\t} else if (this.volatiles['smackdown']) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlet item = toID(serverPokemon ? serverPokemon.item : this.item);\r\n\t\tlet ability = toID(this.effectiveAbility(serverPokemon));\r\n\t\tif (battle.hasPseudoWeather('Magic Room') || this.volatiles['embargo'] || ability === 'klutz') {\r\n\t\t\titem = '' as ID;\r\n\t\t}\r\n\r\n\t\tif (item === 'ironball') {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (ability === 'levitate') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (this.volatiles['magnetrise'] || this.volatiles['telekinesis']) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (item === 'airballoon') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn !this.getTypeList(serverPokemon).includes('Flying');\r\n\t}\r\n\teffectiveAbility(serverPokemon?: ServerPokemon) {\r\n\t\tif (this.fainted || this.volatiles['gastroacid']) return '';\r\n\t\tconst ability = this.side.battle.dex.abilities.get(\r\n\t\t\tserverPokemon?.ability || this.ability || serverPokemon?.baseAbility || ''\r\n\t\t);\r\n\t\tif (this.side.battle.ngasActive() && !ability.isPermanent) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn ability.name;\r\n\t}\r\n\tgetTypeList(serverPokemon?: ServerPokemon) {\r\n\t\tconst [types, addedType] = this.getTypes(serverPokemon);\r\n\t\treturn addedType ? types.concat(addedType) : types;\r\n\t}\r\n\tgetSpeciesForme(serverPokemon?: ServerPokemon): string {\r\n\t\treturn this.volatiles.formechange ? this.volatiles.formechange[1] :\r\n\t\t\t(serverPokemon ? serverPokemon.speciesForme : this.speciesForme);\r\n\t}\r\n\tgetSpecies(serverPokemon?: ServerPokemon) {\r\n\t\treturn this.side.battle.dex.species.get(this.getSpeciesForme(serverPokemon));\r\n\t}\r\n\tgetBaseSpecies() {\r\n\t\treturn this.side.battle.dex.species.get(this.speciesForme);\r\n\t}\r\n\treset() {\r\n\t\tthis.clearVolatile();\r\n\t\tthis.hp = this.maxhp;\r\n\t\tthis.fainted = false;\r\n\t\tthis.status = '';\r\n\t\tthis.moveTrack = [];\r\n\t\tthis.name = this.name || this.speciesForme;\r\n\t}\r\n\t// This function is used for two things:\r\n\t//   1) The percentage to display beside the HP bar.\r\n\t//   2) The width to draw an HP bar.\r\n\t//\r\n\t// This function is NOT used in the calculation of any other displayed\r\n\t// percentages or ranges, which have their own, more complex, formulae.\r\n\thpWidth(maxWidth: number) {\r\n\t\tif (this.fainted || !this.hp) return 0;\r\n\r\n\t\t// special case for low health...\r\n\t\tif (this.hp === 1 && this.maxhp > 45) return 1;\r\n\r\n\t\tif (this.maxhp === 48) {\r\n\t\t\t// Draw the health bar to the middle of the range.\r\n\t\t\t// This affects the width of the visual health bar *only*; it\r\n\t\t\t// does not affect the ranges displayed in any way.\r\n\t\t\tlet range = Pokemon.getPixelRange(this.hp, this.hpcolor);\r\n\t\t\tlet ratio = (range[0] + range[1]) / 2;\r\n\t\t\treturn Math.round(maxWidth * ratio) || 1;\r\n\t\t}\r\n\t\tlet percentage = Math.ceil(100 * this.hp / this.maxhp);\r\n\t\tif ((percentage === 100) && (this.hp < this.maxhp)) {\r\n\t\t\tpercentage = 99;\r\n\t\t}\r\n\t\treturn percentage * maxWidth / 100;\r\n\t}\r\n\tgetHPText(precision = 1) {\r\n\t\treturn Pokemon.getHPText(this, precision);\r\n\t}\r\n\tstatic getHPText(pokemon: PokemonHealth, precision = 1) {\r\n\t\tif (pokemon.maxhp === 100) return pokemon.hp + '%';\r\n\t\tif (pokemon.maxhp !== 48) return (100 * pokemon.hp / pokemon.maxhp).toFixed(precision) + '%';\r\n\t\tlet range = Pokemon.getPixelRange(pokemon.hp, pokemon.hpcolor);\r\n\t\treturn Pokemon.getFormattedRange(range, precision, '–');\r\n\t}\r\n\tdestroy() {\r\n\t\tif (this.sprite) this.sprite.destroy();\r\n\t\tthis.sprite = null!;\r\n\t\tthis.side = null!;\r\n\t}\r\n}\r\n\r\nexport class Side {\r\n\tbattle: Battle;\r\n\tname = '';\r\n\tid = '';\r\n\tsideid: SideID;\r\n\tn: number;\r\n\tisFar: boolean;\r\n\tfoe: Side = null!;\r\n\tally: Side | null = null;\r\n\tavatar: string = 'unknown';\r\n\trating: string = '';\r\n\ttotalPokemon = 6;\r\n\tx = 0;\r\n\ty = 0;\r\n\tz = 0;\r\n\tmissedPokemon: Pokemon = null!;\r\n\r\n\twisher: Pokemon | null = null;\r\n\r\n\tactive = [null] as (Pokemon | null)[];\r\n\tlastPokemon = null as Pokemon | null;\r\n\tpokemon = [] as Pokemon[];\r\n\r\n\t/** [effectName, levels, minDuration, maxDuration] */\r\n\tsideConditions: {[id: string]: [string, number, number, number]} = {};\r\n\r\n\tconstructor(battle: Battle, n: number) {\r\n\t\tthis.battle = battle;\r\n\t\tthis.n = n;\r\n\t\tthis.sideid = ['p1', 'p2', 'p3', 'p4'][n] as SideID;\r\n\t\tthis.isFar = !!(n % 2);\r\n\t}\r\n\r\n\trollTrainerSprites() {\r\n\t\tlet sprites = ['lucas', 'dawn', 'ethan', 'lyra', 'hilbert', 'hilda'];\r\n\t\tthis.avatar = sprites[Math.floor(Math.random() * sprites.length)];\r\n\t}\r\n\r\n\tbehindx(offset: number) {\r\n\t\treturn this.x + (!this.isFar ? -1 : 1) * offset;\r\n\t}\r\n\tbehindy(offset: number) {\r\n\t\treturn this.y + (!this.isFar ? 1 : -1) * offset;\r\n\t}\r\n\tleftof(offset: number) {\r\n\t\treturn (!this.isFar ? -1 : 1) * offset;\r\n\t}\r\n\tbehind(offset: number) {\r\n\t\treturn this.z + (!this.isFar ? -1 : 1) * offset;\r\n\t}\r\n\r\n\tclearPokemon() {\r\n\t\tfor (const pokemon of this.pokemon) pokemon.destroy();\r\n\t\tthis.pokemon = [];\r\n\t\tfor (let i = 0; i < this.active.length; i++) this.active[i] = null;\r\n\t\tthis.lastPokemon = null;\r\n\t}\r\n\treset() {\r\n\t\tthis.clearPokemon();\r\n\t\tthis.sideConditions = {};\r\n\t}\r\n\tsetAvatar(avatar: string) {\r\n\t\tthis.avatar = avatar;\r\n\t}\r\n\tsetName(name: string, avatar?: string) {\r\n\t\tif (name) this.name = name;\r\n\t\tthis.id = toID(this.name);\r\n\t\tif (avatar) {\r\n\t\t\tthis.setAvatar(avatar);\r\n\t\t} else {\r\n\t\t\tthis.rollTrainerSprites();\r\n\t\t\tif (this.foe && this.avatar === this.foe.avatar) this.rollTrainerSprites();\r\n\t\t}\r\n\t}\r\n\taddSideCondition(effect: Effect) {\r\n\t\tlet condition = effect.id;\r\n\t\tif (this.sideConditions[condition]) {\r\n\t\t\tif (condition === 'spikes' || condition === 'toxicspikes') {\r\n\t\t\t\tthis.sideConditions[condition][1]++;\r\n\t\t\t}\r\n\t\t\tthis.battle.scene.addSideCondition(this.n, condition);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Side conditions work as: [effectName, levels, minDuration, maxDuration]\r\n\t\tswitch (condition) {\r\n\t\tcase 'auroraveil':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 8];\r\n\t\t\tbreak;\r\n\t\tcase 'reflect':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, this.battle.gen >= 4 ? 8 : 0];\r\n\t\t\tbreak;\r\n\t\tcase 'safeguard':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'lightscreen':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, this.battle.gen >= 4 ? 8 : 0];\r\n\t\t\tbreak;\r\n\t\tcase 'mist':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'tailwind':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, this.battle.gen >= 5 ? 4 : 3, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'luckychant':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'stealthrock':\r\n    case 'stealthcoal':\r\n\t\tcase 'spikes':\r\n    case 'livewire':\r\n    case 'permafrost':\r\n\t\tcase 'toxicspikes':\r\n\t\tcase 'stickyweb':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 0, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'gmaxwildfire':\r\n\t\tcase 'gmaxvolcalith':\r\n\t\tcase 'gmaxvinelash':\r\n\t\tcase 'gmaxcannonade':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 4, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'grasspledge':\r\n\t\t\tthis.sideConditions[condition] = ['Swamp', 1, 4, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'waterpledge':\r\n\t\t\tthis.sideConditions[condition] = ['Rainbow', 1, 4, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'firepledge':\r\n\t\t\tthis.sideConditions[condition] = ['Sea of Fire', 1, 4, 0];\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 0, 0];\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.battle.scene.addSideCondition(this.n, condition);\r\n\t}\r\n\tremoveSideCondition(condition: string) {\r\n\t\tconst id = toID(condition);\r\n\t\tif (!this.sideConditions[id]) return;\r\n\t\tdelete this.sideConditions[id];\r\n\t\tthis.battle.scene.removeSideCondition(this.n, id);\r\n\t}\r\n\taddPokemon(name: string, ident: string, details: string, replaceSlot = -1) {\r\n\t\tconst oldItem = replaceSlot >= 0 ? this.pokemon[replaceSlot].item : undefined;\r\n\r\n\t\tconst data = this.battle.parseDetails(name, ident, details);\r\n\t\tconst poke = new Pokemon(data, this);\r\n\t\tif (oldItem) poke.item = oldItem;\r\n\r\n\t\tif (!poke.ability && poke.baseAbility) poke.ability = poke.baseAbility;\r\n\t\tpoke.reset();\r\n\r\n\t\tif (replaceSlot >= 0) {\r\n\t\t\tthis.pokemon[replaceSlot] = poke;\r\n\t\t} else {\r\n\t\t\tthis.pokemon.push(poke);\r\n\t\t}\r\n\t\tif (this.pokemon.length > this.totalPokemon || this.battle.speciesClause) {\r\n\t\t\t// check for Illusion\r\n\t\t\tlet existingTable: {[searchid: string]: number} = {};\r\n\t\t\tlet toRemove = -1;\r\n\t\t\tconst newMegaZor = poke.speciesForme === 'Zoroark-Mega';\r\n\t\t\tfor (let poke1i = 0; poke1i < this.pokemon.length; poke1i++) {\r\n\t\t\t\tlet poke1 = this.pokemon[poke1i];\r\n\t\t\t\tif (!poke1.searchid) {\r\n\t\t\t\t\t//Helps prevent extra Zoroark-Mega icons from appearing in battles with team prieview.\r\n\t\t\t\t\tif (newMegaZor && poke1.speciesForme === 'Zoroark' && poke1.name === poke.name && poke1.level === poke.level && poke1.gender === poke.gender) {\r\n\t\t\t\t\t\ttoRemove = poke1i;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else continue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/*If a Zoroark mega evolves and its illusion becomes mega evolved, the real Pokémon's icon will become mega evolved,\r\n\t\t\t\t* even after Zoroark-Mega's illusion is broken. If poke1.searchid was used instead of this variable,\r\n\t\t\t\t* switching the real Pokémon in would add an extra icon, making the team appear bigger than it is.*/\r\n\t\t\t\tconst poke1UnMegaSearchId = poke1.searchid.replace('Eevee-Mega', 'Eevee-Tutored-Mega').replace('Sunflora-M-Mega', 'Sunflora-Mega').replace(/-Mega.*?((?=,)|$)/, '')\r\n\t\t\t\tif (poke1UnMegaSearchId in existingTable) {\r\n\t\t\t\t\tlet poke2i = existingTable[poke1UnMegaSearchId];\r\n\t\t\t\t\tlet poke2 = this.pokemon[poke2i];\r\n\t\t\t\t\tif (poke === poke1) {\r\n\t\t\t\t\t\ttoRemove = poke2i;\r\n\t\t\t\t\t} else if (poke === poke2) {\r\n\t\t\t\t\t\ttoRemove = poke1i;\r\n\t\t\t\t\t} else if (this.active.indexOf(poke1) >= 0) {\r\n\t\t\t\t\t\ttoRemove = poke2i;\r\n\t\t\t\t\t} else if (this.active.indexOf(poke2) >= 0) {\r\n\t\t\t\t\t\ttoRemove = poke1i;\r\n\t\t\t\t\t} else if (poke1.fainted && !poke2.fainted) {\r\n\t\t\t\t\t\ttoRemove = poke2i;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttoRemove = poke1i;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\texistingTable[poke1UnMegaSearchId] = poke1i;\r\n\t\t\t}\r\n\t\t\tif (toRemove >= 0) {\r\n\t\t\t\tif (this.pokemon[toRemove].fainted) {\r\n\t\t\t\t\t// A fainted Pokemon was actually a Zoroark\r\n\t\t\t\t\tlet illusionFound = null;\r\n\t\t\t\t\tfor (const curPoke of this.pokemon) {\r\n\t\t\t\t\t\tif (curPoke === poke) continue;\r\n\t\t\t\t\t\tif (curPoke.fainted) continue;\r\n\t\t\t\t\t\tif (this.active.indexOf(curPoke) >= 0) continue;\r\n\t\t\t\t\t\tif (curPoke.speciesForme === 'Zoroark' || curPoke.speciesForme === 'Zorua' || curPoke.ability === 'Illusion') {\r\n\t\t\t\t\t\t\tillusionFound = curPoke;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!illusionFound) {\r\n\t\t\t\t\t\t// This is Hackmons; we'll just guess a random unfainted Pokemon.\r\n\t\t\t\t\t\t// This will keep the fainted Pokemon count correct, and will\r\n\t\t\t\t\t\t// eventually become correct as incorrect guesses are switched in\r\n\t\t\t\t\t\t// and reguessed.\r\n\t\t\t\t\t\tfor (const curPoke of this.pokemon) {\r\n\t\t\t\t\t\t\tif (curPoke === poke) continue;\r\n\t\t\t\t\t\t\tif (curPoke.fainted) continue;\r\n\t\t\t\t\t\t\tif (this.active.indexOf(curPoke) >= 0) continue;\r\n\t\t\t\t\t\t\tillusionFound = curPoke;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (illusionFound) {\r\n\t\t\t\t\t\tillusionFound.fainted = true;\r\n\t\t\t\t\t\tillusionFound.hp = 0;\r\n\t\t\t\t\t\tillusionFound.status = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.pokemon.splice(toRemove, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.battle.scene.updateSidebar(this);\r\n\r\n\t\treturn poke;\r\n\t}\r\n\r\n\tswitchIn(pokemon: Pokemon, slot = pokemon.slot) {\r\n\t\tthis.active[slot] = pokemon;\r\n\t\tpokemon.slot = slot;\r\n\t\tpokemon.clearVolatile();\r\n\t\tpokemon.lastMove = '';\r\n\t\tthis.battle.lastMove = 'switch-in';\r\n\t\tif (['batonpass', 'zbatonpass'].includes(this.lastPokemon?.lastMove!)) {\r\n\t\t\tpokemon.copyVolatileFrom(this.lastPokemon!);\r\n\t\t}\r\n\r\n\t\tthis.battle.scene.animSummon(pokemon, slot);\r\n\t}\r\n\tdragIn(pokemon: Pokemon, slot = pokemon.slot) {\r\n\t\tlet oldpokemon = this.active[slot];\r\n\t\tif (oldpokemon === pokemon) return;\r\n\t\tthis.lastPokemon = oldpokemon;\r\n\t\tif (oldpokemon) {\r\n\t\t\tthis.battle.scene.animDragOut(oldpokemon);\r\n\t\t\toldpokemon.clearVolatile();\r\n\t\t}\r\n\t\tpokemon.clearVolatile();\r\n\t\tpokemon.lastMove = '';\r\n\t\tthis.battle.lastMove = 'switch-in';\r\n\t\tthis.active[slot] = pokemon;\r\n\t\tpokemon.slot = slot;\r\n\r\n\t\tthis.battle.scene.animDragIn(pokemon, slot);\r\n\t}\r\n\treplace(pokemon: Pokemon, slot = pokemon.slot) {\r\n\t\tlet oldpokemon = this.active[slot];\r\n\t\tif (pokemon === oldpokemon) return;\r\n\t\tthis.lastPokemon = oldpokemon;\r\n\t\tpokemon.clearVolatile();\r\n\t\tif (oldpokemon) {\r\n\t\t\tpokemon.lastMove = oldpokemon.lastMove;\r\n\t\t\tpokemon.hp = oldpokemon.hp;\r\n\t\t\tpokemon.maxhp = oldpokemon.maxhp;\r\n\t\t\tpokemon.hpcolor = oldpokemon.hpcolor;\r\n\t\t\tpokemon.status = oldpokemon.status;\r\n\t\t\tpokemon.copyVolatileFrom(oldpokemon, true);\r\n\t\t\tpokemon.statusData = {...oldpokemon.statusData};\r\n\t\t\t// we don't know anything about the illusioned pokemon except that it's not fainted\r\n\t\t\t// technically we also know its status but only at the end of the turn, not here\r\n\t\t\toldpokemon.fainted = false;\r\n\t\t\toldpokemon.hp = oldpokemon.maxhp;\r\n\t\t\toldpokemon.status = '???';\r\n\t\t}\r\n\t\tthis.active[slot] = pokemon;\r\n\t\tpokemon.slot = slot;\r\n\r\n\t\tif (oldpokemon) {\r\n\t\t\tthis.battle.scene.animUnsummon(oldpokemon, true);\r\n\t\t}\r\n\t\tthis.battle.scene.animSummon(pokemon, slot, true);\r\n\t}\r\n\tswitchOut(pokemon: Pokemon, kwArgs: KWArgs, slot = pokemon.slot) {\r\n\t\tif (pokemon.lastMove !== 'batonpass' && pokemon.lastMove !== 'zbatonpass') {\r\n\t\t\tpokemon.clearVolatile();\r\n\t\t} else {\r\n\t\t\tpokemon.removeVolatile('transform' as ID);\r\n\t\t\tpokemon.removeVolatile('formechange' as ID);\r\n\t\t}\r\n\t\tconst effect = Dex.getEffect(kwArgs.from);\r\n\t\tif (!['batonpass', 'zbatonpass', 'teleport'].includes(effect.id)) {\r\n\t\t\tthis.battle.log(['switchout', pokemon.ident], {from: effect.id});\r\n\t\t}\r\n\t\tpokemon.statusData.toxicTurns = 0;\r\n\t\tif (this.battle.gen === 5) pokemon.statusData.sleepTurns = 0;\r\n\t\tthis.lastPokemon = pokemon;\r\n\t\tthis.active[slot] = null;\r\n\r\n\t\tthis.battle.scene.animUnsummon(pokemon);\r\n\t}\r\n\tswapTo(pokemon: Pokemon, slot: number, kwArgs: KWArgs) {\r\n\t\tif (pokemon.slot === slot) return;\r\n\t\tlet target = this.active[slot];\r\n\r\n\t\tlet oslot = pokemon.slot;\r\n\r\n\t\tpokemon.slot = slot;\r\n\t\tif (target) target.slot = oslot;\r\n\r\n\t\tthis.active[slot] = pokemon;\r\n\t\tthis.active[oslot] = target;\r\n\r\n\t\tthis.battle.scene.animUnsummon(pokemon, true);\r\n\t\tif (target) this.battle.scene.animUnsummon(target, true);\r\n\r\n\t\tthis.battle.scene.animSummon(pokemon, slot, true);\r\n\t\tif (target) this.battle.scene.animSummon(target, oslot, true);\r\n\t}\r\n\tswapWith(pokemon: Pokemon, target: Pokemon, kwArgs: KWArgs) {\r\n\t\t// method provided for backwards compatibility only\r\n\t\tif (pokemon === target) return;\r\n\r\n\t\tlet oslot = pokemon.slot;\r\n\t\tlet nslot = target.slot;\r\n\r\n\t\tpokemon.slot = nslot;\r\n\t\ttarget.slot = oslot;\r\n\t\tthis.active[nslot] = pokemon;\r\n\t\tthis.active[oslot] = target;\r\n\r\n\t\tthis.battle.scene.animUnsummon(pokemon, true);\r\n\t\tthis.battle.scene.animUnsummon(target, true);\r\n\r\n\t\tthis.battle.scene.animSummon(pokemon, nslot, true);\r\n\t\tthis.battle.scene.animSummon(target, oslot, true);\r\n\t}\r\n\tfaint(pokemon: Pokemon, slot = pokemon.slot) {\r\n\t\tpokemon.clearVolatile();\r\n\t\tthis.lastPokemon = pokemon;\r\n\t\tthis.active[slot] = null;\r\n\r\n\t\tpokemon.fainted = true;\r\n\t\tpokemon.hp = 0;\r\n\r\n\t\tthis.battle.scene.animFaint(pokemon);\r\n\t}\r\n\tdestroy() {\r\n\t\tthis.clearPokemon();\r\n\t\tthis.battle = null!;\r\n\t\tthis.foe = null!;\r\n\t}\r\n}\r\n\r\nexport interface PokemonDetails {\r\n\tdetails: string;\r\n\tname: string;\r\n\tspeciesForme: string;\r\n\tlevel: number;\r\n\tshiny: boolean;\r\n\tgender: GenderName | '';\r\n\tident: string;\r\n\tsearchid: string;\r\n}\r\nexport interface PokemonHealth {\r\n\thp: number;\r\n\tmaxhp: number;\r\n\thpcolor: HPColor | '';\r\n\tstatus: StatusName | 'tox' | '' | '???';\r\n\tfainted?: boolean;\r\n}\r\nexport interface ServerPokemon extends PokemonDetails, PokemonHealth {\r\n\tident: string;\r\n\tdetails: string;\r\n\tcondition: string;\r\n\tactive: boolean;\r\n\t/** unboosted stats */\r\n\tstats: {\r\n\t\tatk: number,\r\n\t\tdef: number,\r\n\t\tspa: number,\r\n\t\tspd: number,\r\n\t\tspe: number,\r\n\t};\r\n\t/** currently an ID, will revise to name */\r\n\tmoves: string[];\r\n\t/** currently an ID, will revise to name */\r\n\tbaseAbility: string;\r\n\t/** currently an ID, will revise to name */\r\n\tability?: string;\r\n\t/** currently an ID, will revise to name */\r\n\titem: string;\r\n\t/** currently an ID, will revise to name */\r\n\tpokeball: string;\r\n\t/** false if the pokemon cannot gigantamax, otherwise a string containing the full name of its G-max move */\r\n\tgigantamax: string | false;\r\n}\r\n\r\nexport class Battle {\r\n\tscene: BattleSceneStub;\r\n\r\n\tsidesSwitched = false;\r\n\r\n\tstepQueue: string[];\r\n\t/** See battle.instantAdd */\r\n\tpreemptStepQueue: string[] = [];\r\n\twaitForAnimations: true | false | 'simult' = true;\r\n\t/** the index of `stepQueue` currently being animated */\r\n\tcurrentStep = 0;\r\n\t/** null = not seeking, 0 = seek start, Infinity = seek end, otherwise: seek turn number */\r\n\tseeking: number | null = null;\r\n\r\n\tactiveMoveIsSpread: string | null = null;\r\n\r\n\tsubscription: ((state:\r\n\t\t'playing' | 'paused' | 'turn' | 'atqueueend' | 'callback' | 'ended' | 'error'\r\n\t) => void) | null;\r\n\r\n\tmute = false;\r\n\tmessageFadeTime = 300;\r\n\tmessageShownTime = 1;\r\n\t/** for tracking when to accelerate animations in long battles full of double switches */\r\n\tturnsSinceMoved = 0;\r\n\r\n\t/**\r\n\t * * `-1` = non-battle RoomGames, or hasn't hit Team Preview or `|start`\r\n\t * * `0` = after Team Preview or `|start` but before `|turn|1`\r\n\t */\r\n\tturn = -1;\r\n\t/**\r\n\t * Are we at the end of the queue and waiting for more input?\r\n\t *\r\n\t * In addition to at the end of a battle, this is also true if you're\r\n\t * playing/watching a battle live, and waiting for a player to make a move.\r\n\t */\r\n\tatQueueEnd = false;\r\n\t/**\r\n\t * Has the battle ever been played or fast-forwarded?\r\n\t *\r\n\t * This is not exactly `turn > 0` because if you start playing a replay,\r\n\t * then pause before turn 1, `turn` will still be 0, but playback should\r\n\t * be considered started (for the purposes of displaying \"Play\" vs \"Resume\")\r\n\t */\r\n\tstarted = false;\r\n\t/**\r\n\t * Has playback gotten to the point where a player has won or tied?\r\n\t * (Affects whether BGM is playing)\r\n\t */\r\n\tended = false;\r\n\tisReplay = false;\r\n\tusesUpkeep = false;\r\n\tweather = '' as ID;\r\n\tpseudoWeather = [] as WeatherState[];\r\n\tweatherTimeLeft = 0;\r\n\tweatherMinTimeLeft = 0;\r\n\t/**\r\n\t * The side from which perspective we're viewing. Should be identical to\r\n\t * `nearSide` except in multi battles, where `nearSide` is always the first\r\n\t * near side, and `mySide` is the active player.\r\n\t */\r\n\tmySide: Side = null!;\r\n\tnearSide: Side = null!;\r\n\tfarSide: Side = null!;\r\n\tp1: Side = null!;\r\n\tp2: Side = null!;\r\n\tp3?: Side = null!;\r\n\tp4?: Side = null!;\r\n\tpokemonControlled = 0;\r\n\tsides: Side[] = null!;\r\n\tmyPokemon: ServerPokemon[] | null = null;\r\n\tmyAllyPokemon: ServerPokemon[] | null = null;\r\n\tlastMove = '';\r\n\r\n\tgen = 8;\r\n\tdex: ModdedDex = Dex;\r\n\tteamPreviewCount = 0;\r\n\tspeciesClause = false;\r\n\ttier = '';\r\n\tgameType: 'singles' | 'doubles' | 'triples' | 'multi' | 'freeforall' = 'singles';\r\n\trated: string | boolean = false;\r\n\trules: {[ruleName: string]: 1 | 0} = {};\r\n\tisBlitz = false;\r\n\tendLastTurnPending = false;\r\n\ttotalTimeLeft = 0;\r\n\tgraceTimeLeft = 0;\r\n\t/**\r\n\t * true: timer on, state unknown\r\n\t * false: timer off\r\n\t * number: seconds left this turn\r\n\t */\r\n\tkickingInactive: number | boolean = false;\r\n\r\n\t// options\r\n\tid = '';\r\n\t/** used to forward some information to the room in the old client */\r\n\troomid = '';\r\n\thardcoreMode = false;\r\n\tignoreNicks = !!Dex.prefs('ignorenicks');\r\n\tignoreOpponent = !!Dex.prefs('ignoreopp');\r\n\tignoreSpects = !!Dex.prefs('ignorespects');\r\n\tdebug: boolean;\r\n\tjoinButtons = false;\r\n\r\n\t/**\r\n\t * The actual pause state. Will only be true if playback is actually\r\n\t * paused, not just waiting for the opponent to make a move.\r\n\t */\r\n\tpaused: boolean;\r\n\r\n\tconstructor(options: {\r\n\t\t$frame?: JQuery<HTMLElement>,\r\n\t\t$logFrame?: JQuery<HTMLElement>,\r\n\t\tid?: ID,\r\n\t\tlog?: string[],\r\n\t\tpaused?: boolean,\r\n\t\tisReplay?: boolean,\r\n\t\tdebug?: boolean,\r\n\t\tsubscription?: Battle['subscription'],\r\n\t} = {}) {\r\n\t\tthis.id = options.id || '';\r\n\r\n\t\tif (options.$frame && options.$logFrame) {\r\n\t\t\tthis.scene = new BattleScene(this, options.$frame, options.$logFrame);\r\n\t\t} else if (!options.$frame && !options.$logFrame) {\r\n\t\t\tthis.scene = new BattleSceneStub();\r\n\t\t} else {\r\n\t\t\tthrow new Error(`You must specify $frame and $logFrame simultaneously`);\r\n\t\t}\r\n\r\n\t\tthis.paused = !!options.paused;\r\n\t\tthis.started = !this.paused;\r\n\t\tthis.debug = !!options.debug;\r\n\t\tthis.stepQueue = options.log || [];\r\n\t\tthis.subscription = options.subscription || null;\r\n\r\n\t\tthis.p1 = new Side(this, 0);\r\n\t\tthis.p2 = new Side(this, 1);\r\n\t\tthis.sides = [this.p1, this.p2];\r\n\t\tthis.p2.foe = this.p1;\r\n\t\tthis.p1.foe = this.p2;\r\n\t\tthis.nearSide = this.mySide = this.p1;\r\n\t\tthis.farSide = this.p2;\r\n\r\n\t\tthis.resetStep();\r\n\t}\r\n\r\n\tsubscribe(listener: Battle['subscription']) {\r\n\t\tthis.subscription = listener;\r\n\t}\r\n\r\n\tremovePseudoWeather(weather: string) {\r\n\t\tfor (let i = 0; i < this.pseudoWeather.length; i++) {\r\n\t\t\tif (this.pseudoWeather[i][0] === weather) {\r\n\t\t\t\tthis.pseudoWeather.splice(i, 1);\r\n\t\t\t\tthis.scene.updateWeather();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\taddPseudoWeather(weather: string, minTimeLeft: number, timeLeft: number) {\r\n\t\tthis.pseudoWeather.push([weather, minTimeLeft, timeLeft]);\r\n\t\tthis.scene.updateWeather();\r\n\t}\r\n\thasPseudoWeather(weather: string) {\r\n\t\tfor (const [pseudoWeatherName] of this.pseudoWeather) {\r\n\t\t\tif (weather === pseudoWeatherName) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tngasActive() {\r\n\t\tfor (const side of this.sides) {\r\n\t\t\tfor (const active of side.active) {\r\n\t\t\t\tif (active && !active.fainted && active.ability === 'Neutralizing Gas' && !active.volatiles['gastroacid']) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tabilityActive(abilities: string[]) {\r\n\t\tif (this.ngasActive()) {\r\n\t\t\tabilities = abilities.filter(a => this.dex.abilities.get(a).isPermanent);\r\n\t\t\tif (!abilities.length) return false;\r\n\t\t}\r\n\t\tfor (const side of this.sides) {\r\n\t\t\tfor (const active of side.active) {\r\n\t\t\t\tif (active && !active.fainted && abilities.includes(active.ability) && !active.volatiles['gastroacid']) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\treset() {\r\n\t\tthis.paused = true;\r\n\t\tthis.scene.pause();\r\n\t\tthis.resetStep();\r\n\t\tthis.subscription?.('paused');\r\n\t}\r\n\tresetStep() {\r\n\t\t// battle state\r\n\t\tthis.turn = -1;\r\n\t\tthis.started = !this.paused;\r\n\t\tthis.ended = false;\r\n\t\tthis.atQueueEnd = false;\r\n\t\tthis.weather = '' as ID;\r\n\t\tthis.weatherTimeLeft = 0;\r\n\t\tthis.weatherMinTimeLeft = 0;\r\n\t\tthis.pseudoWeather = [];\r\n\t\tthis.lastMove = '';\r\n\r\n\t\tfor (const side of this.sides) {\r\n\t\t\tif (side) side.reset();\r\n\t\t}\r\n\t\tthis.myPokemon = null;\r\n\t\tthis.myAllyPokemon = null;\r\n\r\n\t\t// DOM state\r\n\t\tthis.scene.reset();\r\n\r\n\t\t// activity queue state\r\n\t\tthis.activeMoveIsSpread = null;\r\n\t\tthis.currentStep = 0;\r\n\t\tthis.resetTurnsSinceMoved();\r\n\t\tthis.nextStep();\r\n\t}\r\n\tdestroy() {\r\n\t\tthis.scene.destroy();\r\n\r\n\t\tfor (let i = 0; i < this.sides.length; i++) {\r\n\t\t\tif (this.sides[i]) this.sides[i].destroy();\r\n\t\t\tthis.sides[i] = null!;\r\n\t\t}\r\n\t\tthis.mySide = null!;\r\n\t\tthis.nearSide = null!;\r\n\t\tthis.farSide = null!;\r\n\t\tthis.p1 = null!;\r\n\t\tthis.p2 = null!;\r\n\t\tthis.p3 = null!;\r\n\t\tthis.p4 = null!;\r\n\t}\r\n\r\n\tlog(args: Args, kwArgs?: KWArgs, preempt?: boolean) {\r\n\t\tthis.scene.log.add(args, kwArgs, preempt);\r\n\t}\r\n\r\n\tresetToCurrentTurn() {\r\n\t\tthis.seekTurn(this.ended ? Infinity : this.turn, true);\r\n\t}\r\n\tswitchSides() {\r\n\t\tthis.setPerspective(this.sidesSwitched ? 'p1' : 'p2');\r\n\t}\r\n\tsetPerspective(sideid: SideID) {\r\n\t\tif (this.mySide.sideid === sideid) return;\r\n\t\tif (sideid.length !== 2 || !sideid.startsWith('p')) return;\r\n\t\tconst side = this[sideid];\r\n\t\tif (!side) return;\r\n\t\tthis.mySide = side;\r\n\r\n\t\tif ((side.n % 2) === this.p1.n) {\r\n\t\t\tthis.sidesSwitched = false;\r\n\t\t\tthis.nearSide = this.p1;\r\n\t\t\tthis.farSide = this.p2;\r\n\t\t} else {\r\n\t\t\tthis.sidesSwitched = true;\r\n\t\t\tthis.nearSide = this.p2;\r\n\t\t\tthis.farSide = this.p1;\r\n\t\t}\r\n\t\tthis.nearSide.isFar = false;\r\n\t\tthis.farSide.isFar = true;\r\n\t\tif (this.sides.length > 2) {\r\n\t\t\tthis.sides[this.nearSide.n + 2].isFar = false;\r\n\t\t\tthis.sides[this.farSide.n + 2].isFar = true;\r\n\t\t}\r\n\r\n\t\tthis.resetToCurrentTurn();\r\n\t}\r\n\r\n\t//\r\n\t// activities\r\n\t//\r\n\tstart() {\r\n\t\tthis.log(['start']);\r\n\t\tthis.resetTurnsSinceMoved();\r\n\t}\r\n\twinner(winner?: string) {\r\n\t\tthis.log(['win', winner || '']);\r\n\t\tthis.ended = true;\r\n\t\tthis.subscription?.('ended');\r\n\t}\r\n\tprematureEnd() {\r\n\t\tthis.log(['message', 'This replay ends here.']);\r\n\t\tthis.ended = true;\r\n\t\tthis.subscription?.('ended');\r\n\t}\r\n\tendLastTurn() {\r\n\t\tif (this.endLastTurnPending) {\r\n\t\t\tthis.endLastTurnPending = false;\r\n\t\t\tthis.scene.updateStatbars();\r\n\t\t}\r\n\t}\r\n\tsetHardcoreMode(mode: boolean) {\r\n\t\tthis.hardcoreMode = mode;\r\n\t\tthis.scene.updateSidebars();\r\n\t\tthis.scene.updateWeather(true);\r\n\t}\r\n\tsetTurn(turnNum: number) {\r\n\t\tif (turnNum === this.turn + 1) {\r\n\t\t\tthis.endLastTurnPending = true;\r\n\t\t}\r\n\t\tif (this.turn && !this.usesUpkeep) this.updateTurnCounters(); // for compatibility with old replays\r\n\t\tthis.turn = turnNum;\r\n\t\tthis.started = true;\r\n\r\n\t\tif (this.seeking === null) this.turnsSinceMoved++;\r\n\r\n\t\tthis.scene.incrementTurn();\r\n\r\n\t\tif (this.seeking !== null) {\r\n\t\t\tif (turnNum >= this.seeking) {\r\n\t\t\t\tthis.stopSeeking();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.subscription?.('turn');\r\n\t\t}\r\n\t}\r\n\tresetTurnsSinceMoved() {\r\n\t\tthis.turnsSinceMoved = 0;\r\n\t\tthis.scene.updateAcceleration();\r\n\t}\r\n\tchangeWeather(weatherName: string, poke?: Pokemon, isUpkeep?: boolean, ability?: Effect) {\r\n\t\tlet weather = toID(weatherName);\r\n\t\tif (!weather || weather === 'none') {\r\n\t\t\tweather = '' as ID;\r\n\t\t}\r\n\t\tif (isUpkeep) {\r\n\t\t\tif (this.weather && this.weatherTimeLeft) {\r\n\t\t\t\tthis.weatherTimeLeft--;\r\n\t\t\t\tif (this.weatherMinTimeLeft !== 0) this.weatherMinTimeLeft--;\r\n\t\t\t}\r\n\t\t\tif (this.seeking === null) {\r\n\t\t\t\tthis.scene.upkeepWeather();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (weather) {\r\n\t\t\tlet isExtremeWeather = (weather === 'deltastream' || weather === 'desolateland' || weather === 'primordialsea');\r\n\t\t\tif (poke) {\r\n\t\t\t\tif (ability) {\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name);\r\n\t\t\t\t}\r\n\t\t\t\tthis.weatherTimeLeft = (this.gen <= 5 || isExtremeWeather) ? 0 : 8;\r\n\t\t\t\tthis.weatherMinTimeLeft = (this.gen <= 5 || isExtremeWeather) ? 0 : 5;\r\n\t\t\t} else if (isExtremeWeather) {\r\n\t\t\t\tthis.weatherTimeLeft = 0;\r\n\t\t\t\tthis.weatherMinTimeLeft = 0;\r\n\t\t\t} else {\r\n\t\t\t\tthis.weatherTimeLeft = (this.gen <= 3 ? 5 : 8);\r\n\t\t\t\tthis.weatherMinTimeLeft = (this.gen <= 3 ? 0 : 5);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.weather = weather;\r\n\t\tthis.scene.updateWeather();\r\n\t}\r\n\tswapSideConditions() {\r\n\t\tconst sideConditions = [\r\n\t\t\t'mist', 'lightscreen', 'reflect', 'spikes', 'safeguard', 'tailwind', 'toxicspikes', 'stealthrock', 'stealthcoal', 'livewire', 'permafrost', 'waterpledge', 'firepledge', 'grasspledge', 'stickyweb', 'auroraveil', 'gmaxsteelsurge', 'gmaxcannonade', 'gmaxvinelash', 'gmaxwildfire',\r\n\t\t];\r\n\t\tif (this.gameType === 'freeforall') {\r\n\t\t\t// TODO: Add FFA support\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tlet side1 = this.sides[0];\r\n\t\t\tlet side2 = this.sides[1];\r\n\t\t\tfor (const id of sideConditions) {\r\n\t\t\t\tif (side1.sideConditions[id] && side2.sideConditions[id]) {\r\n\t\t\t\t\t[side1.sideConditions[id], side2.sideConditions[id]] = [\r\n\t\t\t\t\t\tside2.sideConditions[id], side1.sideConditions[id],\r\n\t\t\t\t\t];\r\n\t\t\t\t\tthis.scene.addSideCondition(side1.n, id as ID);\r\n\t\t\t\t\tthis.scene.addSideCondition(side2.n, id as ID);\r\n\t\t\t\t} else if (side1.sideConditions[id] && !side2.sideConditions[id]) {\r\n\t\t\t\t\tside2.sideConditions[id] = side1.sideConditions[id];\r\n\t\t\t\t\tthis.scene.addSideCondition(side2.n, id as ID);\r\n\t\t\t\t\tside1.removeSideCondition(id);\r\n\t\t\t\t} else if (side2.sideConditions[id] && !side1.sideConditions[id]) {\r\n\t\t\t\t\tside1.sideConditions[id] = side2.sideConditions[id];\r\n\t\t\t\t\tthis.scene.addSideCondition(side1.n, id as ID);\r\n\t\t\t\t\tside2.removeSideCondition(id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tupdateTurnCounters() {\r\n\t\tfor (const pWeather of this.pseudoWeather) {\r\n\t\t\tif (pWeather[1]) pWeather[1]--;\r\n\t\t\tif (pWeather[2]) pWeather[2]--;\r\n\t\t}\r\n\t\tfor (const side of this.sides) {\r\n\t\t\tfor (const id in side.sideConditions) {\r\n\t\t\t\tlet cond = side.sideConditions[id];\r\n\t\t\t\tif (cond[2]) cond[2]--;\r\n\t\t\t\tif (cond[3]) cond[3]--;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const poke of [...this.nearSide.active, ...this.farSide.active]) {\r\n\t\t\tif (poke) {\r\n\t\t\t\tif (poke.status === 'tox') poke.statusData.toxicTurns++;\r\n\t\t\t\tpoke.clearTurnstatuses();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.scene.updateWeather();\r\n\t}\r\n\tuseMove(pokemon: Pokemon, move: Move, target: Pokemon | null, kwArgs: KWArgs) {\r\n\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\tthis.activateAbility(pokemon, fromeffect);\r\n\t\tpokemon.clearMovestatuses();\r\n\t\tif (move.id === 'focuspunch') {\r\n\t\t\tpokemon.removeTurnstatus('focuspunch' as ID);\r\n\t\t}\r\n\t\tthis.scene.updateStatbar(pokemon);\r\n\t\tif (fromeffect.id === 'sleeptalk') {\r\n\t\t\tpokemon.rememberMove(move.name, 0);\r\n\t\t}\r\n\t\tlet callerMoveForPressure = null;\r\n\t\t// will not include effects that are conditions named after moves like Magic Coat and Snatch, which is good\r\n\t\tif (fromeffect.id && kwArgs.from.startsWith(\"move:\")) {\r\n\t\t\tcallerMoveForPressure = fromeffect as Move;\r\n\t\t}\r\n\t\tif (!fromeffect.id || callerMoveForPressure || fromeffect.id === 'pursuit') {\r\n\t\t\tlet moveName = move.name;\r\n\t\t\tif (!callerMoveForPressure) {\r\n\t\t\t\tif (move.isZ) {\r\n\t\t\t\t\tpokemon.item = move.isZ;\r\n\t\t\t\t\tlet item = Dex.items.get(move.isZ);\r\n\t\t\t\t\tif (item.zMoveFrom) moveName = item.zMoveFrom;\r\n\t\t\t\t} else if (move.name.slice(0, 2) === 'Z-') {\r\n\t\t\t\t\tmoveName = moveName.slice(2);\r\n\t\t\t\t\tmove = Dex.moves.get(moveName);\r\n\t\t\t\t\tif (window.BattleItems) {\r\n\t\t\t\t\t\tfor (let item in BattleItems) {\r\n\t\t\t\t\t\t\tif (BattleItems[item].zMoveType === move.type) pokemon.item = item;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet pp = 1;\r\n\t\t\tif (this.abilityActive(['Pressure']) && move.id !== 'stickyweb') {\r\n\t\t\t\tconst foeTargets = [];\r\n\t\t\t\tconst moveTarget = move.pressureTarget;\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\t!target && this.gameType === 'singles' &&\r\n\t\t\t\t\t!['self', 'allies', 'allySide', 'adjacentAlly', 'adjacentAllyOrSelf', 'allyTeam'].includes(moveTarget)\r\n\t\t\t\t) {\r\n\t\t\t\t\t// Hardcode for moves without a target in singles\r\n\t\t\t\t\tfoeTargets.push(pokemon.side.foe.active[0]);\r\n\t\t\t\t} else if (['all', 'allAdjacent', 'allAdjacentFoes', 'foeSide'].includes(moveTarget)) {\r\n\t\t\t\t\t// We loop through all sides here for FFA\r\n\t\t\t\t\tfor (const side of this.sides) {\r\n\t\t\t\t\t\tif (side === pokemon.side || side === pokemon.side.ally) continue;\r\n\t\t\t\t\t\tfor (const active of side.active) {\r\n\t\t\t\t\t\t\tfoeTargets.push(active);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (target && target.side !== pokemon.side) {\r\n\t\t\t\t\tfoeTargets.push(target);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (const foe of foeTargets) {\r\n\t\t\t\t\tif (foe && !foe.fainted && foe.effectiveAbility() === 'Pressure') {\r\n\t\t\t\t\t\tpp += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!callerMoveForPressure) {\r\n\t\t\t\tpokemon.rememberMove(moveName, pp);\r\n\t\t\t} else {\r\n\t\t\t\tpokemon.rememberMove(callerMoveForPressure.name, pp - 1); // 1 pp was already deducted from using the move itself\r\n\t\t\t}\r\n\t\t}\r\n\t\tpokemon.lastMove = move.id;\r\n\t\tthis.lastMove = move.id;\r\n\t\tif (move.id === 'wish' || move.id === 'healingwish') {\r\n\t\t\tpokemon.side.wisher = pokemon;\r\n\t\t}\r\n\t}\r\n\tanimateMove(pokemon: Pokemon, move: Move, target: Pokemon | null, kwArgs: KWArgs) {\r\n\t\tthis.activeMoveIsSpread = kwArgs.spread;\r\n\t\tif (this.seeking !== null || kwArgs.still) return;\r\n\r\n\t\tif (!target) target = pokemon.side.foe.active[0];\r\n\t\tif (!target) target = pokemon.side.foe.missedPokemon;\r\n\t\tif (kwArgs.miss && target.side) {\r\n\t\t\ttarget = target.side.missedPokemon;\r\n\t\t}\r\n\t\tif (kwArgs.notarget) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (kwArgs.prepare || kwArgs.anim === 'prepare') {\r\n\t\t\tthis.scene.runPrepareAnim(move.id, pokemon, target);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet usedMove = kwArgs.anim ? Dex.moves.get(kwArgs.anim) : move;\r\n\t\tif (!kwArgs.spread) {\r\n\t\t\tthis.scene.runMoveAnim(usedMove.id, [pokemon, target]);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet targets = [pokemon];\r\n\t\tif (kwArgs.spread === '.') {\r\n\t\t\t//  no target was hit by the attack\r\n\t\t\ttargets.push(target.side.missedPokemon);\r\n\t\t} else {\r\n\t\t\tfor (const hitTarget of kwArgs.spread.split(',')) {\r\n\t\t\t\tconst curTarget = this.getPokemon(hitTarget + ': ?');\r\n\t\t\t\tif (!curTarget) {\r\n\t\t\t\t\tthis.log(['error', `Invalid spread move target: \"${hitTarget}\"`]);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\ttargets.push(curTarget);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.scene.runMoveAnim(usedMove.id, targets);\r\n\t}\r\n\tcantUseMove(pokemon: Pokemon, effect: Effect, move: Move, kwArgs: KWArgs) {\r\n\t\tpokemon.clearMovestatuses();\r\n\t\tthis.scene.updateStatbar(pokemon);\r\n\t\tif (effect.id in BattleStatusAnims) {\r\n\t\t\tthis.scene.runStatusAnim(effect.id, [pokemon]);\r\n\t\t}\r\n\t\tthis.activateAbility(pokemon, effect);\r\n\t\tif (move.id) pokemon.rememberMove(move.name, 0);\r\n\t\tswitch (effect.id) {\r\n\t\tcase 'par':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Paralyzed', 'par');\r\n\t\t\tbreak;\r\n\t\tcase 'frz':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Frozen', 'frz');\r\n\t\t\tbreak;\r\n\t\tcase 'slp':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Asleep', 'slp');\r\n\t\t\tpokemon.statusData.sleepTurns++;\r\n\t\t\tbreak;\r\n\t\tcase 'truant':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Loafing around', 'neutral');\r\n\t\t\tbreak;\r\n\t\tcase 'recharge':\r\n\t\t\tthis.scene.runOtherAnim('selfstatus' as ID, [pokemon]);\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Must recharge', 'neutral');\r\n\t\t\tbreak;\r\n\t\tcase 'focuspunch':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Lost focus', 'neutral');\r\n\t\t\tpokemon.removeTurnstatus('focuspunch' as ID);\r\n\t\t\tbreak;\r\n\t\tcase 'shelltrap':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Trap failed', 'neutral');\r\n\t\t\tpokemon.removeTurnstatus('shelltrap' as ID);\r\n\t\t\tbreak;\r\n\t\tcase 'flinch':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Flinched', 'neutral');\r\n\t\t\tpokemon.removeTurnstatus('focuspunch' as ID);\r\n\t\t\tbreak;\r\n\t\tcase 'attract':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Immobilized', 'neutral');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.scene.animReset(pokemon);\r\n\t}\r\n\r\n\tactivateAbility(pokemon: Pokemon | null, effectOrName: Effect | string, isNotBase?: boolean) {\r\n\t\tif (!pokemon || !effectOrName) return;\r\n\t\tif (typeof effectOrName !== 'string') {\r\n\t\t\tif (effectOrName.effectType !== 'Ability') return;\r\n\t\t\teffectOrName = effectOrName.name;\r\n\t\t}\r\n\t\tthis.scene.abilityActivateAnim(pokemon, effectOrName);\r\n\t\tpokemon.rememberAbility(effectOrName, isNotBase);\r\n\t}\r\n\r\n\trunMinor(args: Args, kwArgs: KWArgs, nextArgs?: Args, nextKwargs?: KWArgs) {\r\n\t\tif (nextArgs && nextKwargs) {\r\n\t\t\tif (args[2] === 'Sturdy' && args[0] === '-activate') {\r\n\t\t\t\targs[2] = 'ability: Sturdy';\r\n\t\t\t}\r\n\t\t\tif (['-crit', '-supereffective', '-resisted'].includes(args[0]) || args[2] === 'ability: Sturdy') {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-damage' && !kwArgs.from && args[1] !== nextArgs[1] && (\r\n\t\t\t\t['-crit', '-supereffective', '-resisted'].includes(nextArgs[0]) ||\r\n\t\t\t\t(nextArgs[0] === '-damage' && !nextKwargs.from)\r\n\t\t\t)) {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-damage' && nextArgs[0] === '-damage' && kwArgs.from && kwArgs.from === nextKwargs.from) {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-ability' && (args[2] === 'Intimidate' || args[3] === 'boost')) {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-unboost' && nextArgs[0] === '-unboost') {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-boost' && nextArgs[0] === '-boost') {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-damage' && kwArgs.from === 'Leech Seed' && nextArgs[0] === '-heal' && nextKwargs.silent) {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === 'detailschange' && nextArgs[0] === '-mega') {\r\n\t\t\t\tif (this.scene.closeMessagebar()) {\r\n\t\t\t\t\tthis.currentStep--;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tkwArgs.simult = '.';\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (kwArgs.then) this.waitForAnimations = false;\r\n\t\tif (kwArgs.simult) this.waitForAnimations = 'simult';\r\n\r\n\t\tconst CONSUMED = ['eaten', 'popped', 'consumed', 'held up'];\r\n\t\tswitch (args[0]) {\r\n\t\tcase '-damage': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet damage = poke.healthParse(args[2], true);\r\n\t\t\tif (damage === null) break;\r\n\t\t\tlet range = poke.getDamageRange(damage);\r\n\r\n\t\t\tif (kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\t\tthis.activateAbility(ofpoke, effect);\r\n\t\t\t\tif (effect.effectType === 'Item') {\r\n\t\t\t\t\tconst itemPoke = ofpoke || poke;\r\n\t\t\t\t\tif (itemPoke.prevItem !== effect.name && !CONSUMED.includes(itemPoke.prevItemEffect)) {\r\n\t\t\t\t\t\titemPoke.item = effect.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'brn':\r\n\t\t\t\t\tthis.scene.runStatusAnim('brn' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'psn':\r\n\t\t\t\t\tthis.scene.runStatusAnim('psn' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'baddreams':\r\n\t\t\t\t\tthis.scene.runStatusAnim('cursed' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'curse':\r\n\t\t\t\t\tthis.scene.runStatusAnim('cursed' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'confusion':\r\n\t\t\t\t\tthis.scene.runStatusAnim('confusedselfhit' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'leechseed':\r\n\t\t\t\t\tthis.scene.runOtherAnim('leech' as ID, [ofpoke!, poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bind':\r\n\t\t\t\tcase 'wrap':\r\n\t\t\t\t\tthis.scene.runOtherAnim('bound' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet damageinfo = '' + Pokemon.getFormattedRange(range, damage[1] === 100 ? 0 : 1, '\\u2013');\r\n\t\t\t\tif (damage[1] !== 100) {\r\n\t\t\t\t\tlet hover = '' + ((damage[0] < 0) ? '\\u2212' : '') +\r\n\t\t\t\t\t\tMath.abs(damage[0]) + '/' + damage[1];\r\n\t\t\t\t\tif (damage[1] === 48) { // this is a hack\r\n\t\t\t\t\t\thover += ' pixels';\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// battle-log will convert this into <abbr>\r\n\t\t\t\t\tdamageinfo = '||' + hover + '||' + damageinfo + '||';\r\n\t\t\t\t}\r\n\t\t\t\targs[3] = damageinfo;\r\n\t\t\t}\r\n\t\t\tthis.scene.damageAnim(poke, Pokemon.getFormattedRange(range, 0, ' to '));\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-heal': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet damage = poke.healthParse(args[2], true, true);\r\n\t\t\tif (damage === null) break;\r\n\t\t\tlet range = poke.getDamageRange(damage);\r\n\r\n\t\t\tif (kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tthis.activateAbility(poke, effect);\r\n\t\t\t\tif (effect.effectType === 'Item' && !CONSUMED.includes(poke.prevItemEffect)) {\r\n\t\t\t\t\tif (poke.prevItem !== effect.name) {\r\n\t\t\t\t\t\tpoke.item = effect.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'lunardance':\r\n\t\t\t\t\tfor (let trackedMove of poke.moveTrack) {\r\n\t\t\t\t\t\ttrackedMove[1] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tcase 'healingwish':\r\n\t\t\t\t\tthis.lastMove = 'healing-wish';\r\n\t\t\t\t\tthis.scene.runResidualAnim('healingwish' as ID, poke);\r\n\t\t\t\t\tpoke.side.wisher = null;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'wish':\r\n\t\t\t\t\tthis.scene.runResidualAnim('wish' as ID, poke);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.scene.runOtherAnim('heal' as ID, [poke]);\r\n\t\t\tthis.scene.healAnim(poke, Pokemon.getFormattedRange(range, 0, ' to '));\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-sethp': {\r\n\t\t\tfor (let k = 0; k < 2; k++) {\r\n\t\t\t\tlet cpoke = this.getPokemon(args[1 + 2 * k]);\r\n\t\t\t\tif (cpoke) {\r\n\t\t\t\t\tlet damage = cpoke.healthParse(args[2 + 2 * k])!;\r\n\t\t\t\t\tlet range = cpoke.getDamageRange(damage);\r\n\t\t\t\t\tlet formattedRange = Pokemon.getFormattedRange(range, 0, ' to ');\r\n\t\t\t\t\tlet diff = damage[0];\r\n\t\t\t\t\tif (diff > 0) {\r\n\t\t\t\t\t\tthis.scene.healAnim(cpoke, formattedRange);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.scene.damageAnim(cpoke, formattedRange);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-boost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet stat = args[2] as BoostStatName;\r\n\t\t\tif (this.gen === 1 && stat === 'spd') break;\r\n\t\t\tif (this.gen === 1 && stat === 'spa') stat = 'spc';\r\n\t\t\tlet amount = parseInt(args[3], 10);\r\n\t\t\tif (amount === 0) {\r\n\t\t\t\tthis.scene.resultAnim(poke, 'already ' + poke.getBoost(stat), 'neutral');\r\n\t\t\t\tthis.log(args, kwArgs);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!poke.boosts[stat]) {\r\n\t\t\t\tpoke.boosts[stat] = 0;\r\n\t\t\t}\r\n\t\t\tpoke.boosts[stat] += amount;\r\n\r\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\t\tif (!(effect.id === 'weakarmor' && stat === 'spe')) {\r\n\t\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, poke.getBoost(stat), 'good');\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-unboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet stat = args[2] as BoostStatName;\r\n\t\t\tif (this.gen === 1 && stat === 'spd') break;\r\n\t\t\tif (this.gen === 1 && stat === 'spa') stat = 'spc';\r\n\t\t\tlet amount = parseInt(args[3], 10);\r\n\t\t\tif (amount === 0) {\r\n\t\t\t\tthis.scene.resultAnim(poke, 'already ' + poke.getBoost(stat), 'neutral');\r\n\t\t\t\tthis.log(args, kwArgs);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!poke.boosts[stat]) {\r\n\t\t\t\tpoke.boosts[stat] = 0;\r\n\t\t\t}\r\n\t\t\tpoke.boosts[stat] -= amount;\r\n\r\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, poke.getBoost(stat), 'bad');\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-setboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet stat = args[2] as BoostStatName;\r\n\t\t\tlet amount = parseInt(args[3], 10);\r\n\t\t\tpoke.boosts[stat] = amount;\r\n\t\t\tthis.scene.resultAnim(poke, poke.getBoost(stat), (amount > 0 ? 'good' : 'bad'));\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-swapboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet poke2 = this.getPokemon(args[2])!;\r\n\t\t\tlet stats = args[3] ? args[3].split(', ') : ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion'];\r\n\t\t\tfor (const stat of stats) {\r\n\t\t\t\tlet tmp = poke.boosts[stat];\r\n\t\t\t\tpoke.boosts[stat] = poke2.boosts[stat];\r\n\t\t\t\tif (!poke.boosts[stat]) delete poke.boosts[stat];\r\n\t\t\t\tpoke2.boosts[stat] = tmp;\r\n\t\t\t\tif (!poke2.boosts[stat]) delete poke2.boosts[stat];\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Stats swapped', 'neutral');\r\n\t\t\tthis.scene.resultAnim(poke2, 'Stats swapped', 'neutral');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-clearpositiveboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet ofpoke = this.getPokemon(args[2]);\r\n\t\t\tlet effect = Dex.getEffect(args[3]);\r\n\t\t\tfor (const stat in poke.boosts) {\r\n\t\t\t\tif (poke.boosts[stat] > 0) delete poke.boosts[stat];\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Boosts lost', 'bad');\r\n\r\n\t\t\tif (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'spectralthief':\r\n\t\t\t\t\t// todo: update StealBoosts so it animates 1st on Spectral Thief\r\n\t\t\t\t\tthis.scene.runOtherAnim('spectralthiefboost' as ID, [ofpoke!, poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-clearnegativeboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tfor (const stat in poke.boosts) {\r\n\t\t\t\tif (poke.boosts[stat] < 0) delete poke.boosts[stat];\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Restored', 'good');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-copyboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet frompoke = this.getPokemon(args[2])!;\r\n\t\t\tlet stats = args[3] ? args[3].split(', ') : ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion'];\r\n\t\t\tfor (const stat of stats) {\r\n\t\t\t\tpoke.boosts[stat] = frompoke.boosts[stat];\r\n\t\t\t\tif (!poke.boosts[stat]) delete poke.boosts[stat];\r\n\t\t\t}\r\n\t\t\tif (this.gen >= 6) {\r\n\t\t\t\tconst volatilesToCopy = ['focusenergy', 'laserfocus'];\r\n\t\t\t\tfor (const volatile of volatilesToCopy) {\r\n\t\t\t\t\tif (frompoke.volatiles[volatile]) {\r\n\t\t\t\t\t\tpoke.addVolatile(volatile as ID);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpoke.removeVolatile(volatile as ID);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Stats copied', 'neutral');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-clearboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tpoke.boosts = {};\r\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Stats reset', 'neutral');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-invertboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tfor (const stat in poke.boosts) {\r\n\t\t\t\tpoke.boosts[stat] = -poke.boosts[stat];\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Stats inverted', 'neutral');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-clearallboost': {\r\n\t\t\tlet timeOffset = this.scene.timeOffset;\r\n\t\t\tfor (const side of this.sides) {\r\n\t\t\t\tfor (const active of side.active) {\r\n\t\t\t\t\tif (active) {\r\n\t\t\t\t\t\tactive.boosts = {};\r\n\t\t\t\t\t\tthis.scene.timeOffset = timeOffset;\r\n\t\t\t\t\t\tthis.scene.resultAnim(active, 'Stats reset', 'neutral');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-crit': {\r\n\t\t\tlet poke = this.getPokemon(args[1]);\r\n\t\t\tif (poke) this.scene.resultAnim(poke, 'Critical hit', 'bad');\r\n\t\t\tif (this.activeMoveIsSpread) kwArgs.spread = '.';\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-supereffective': {\r\n\t\t\tlet poke = this.getPokemon(args[1]);\r\n\t\t\tif (poke) {\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Super-effective', 'bad');\r\n\t\t\t\tif (window.Config?.server?.afd) {\r\n\t\t\t\t\tthis.scene.runOtherAnim('hitmark' as ID, [poke]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.activeMoveIsSpread) kwArgs.spread = '.';\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-resisted': {\r\n\t\t\tlet poke = this.getPokemon(args[1]);\r\n\t\t\tif (poke) this.scene.resultAnim(poke, 'Resisted', 'neutral');\r\n\t\t\tif (this.activeMoveIsSpread) kwArgs.spread = '.';\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-immune': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tthis.activateAbility(this.getPokemon(kwArgs.of) || poke, fromeffect);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tthis.scene.resultAnim(poke, 'Immune', 'neutral');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-miss': {\r\n\t\t\tlet target = this.getPokemon(args[2]);\r\n\t\t\tif (target) {\r\n\t\t\t\tthis.scene.resultAnim(target, 'Missed', 'neutral');\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-fail': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tthis.activateAbility(ofpoke || poke, fromeffect);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'brn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Already burned', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'tox':\r\n\t\t\tcase 'psn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Already poisoned', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'slp':\r\n\t\t\t\tif (fromeffect.id === 'uproar') {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Failed', 'neutral');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Already asleep', 'neutral');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'par':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Already paralyzed', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'frz':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Already frozen', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'unboost':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Stat drop blocked', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (poke) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Failed', 'neutral');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.scene.animReset(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-block': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'quickguard':\r\n\t\t\t\tpoke.addTurnstatus('quickguard' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Quick Guard', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'wideguard':\r\n\t\t\t\tpoke.addTurnstatus('wideguard' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Wide Guard', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'craftyshield':\r\n\t\t\t\tpoke.addTurnstatus('craftyshield' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Crafty Shield', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'protect':\r\n\t\t\t\tpoke.addTurnstatus('protect' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Protected', 'good');\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'safetygoggles':\r\n\t\t\t\tpoke.item = 'Safety Goggles';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'protectivepads':\r\n\t\t\t\tpoke.item = 'Protective Pads';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-center': case '-notarget': case '-ohko':\r\n\t\tcase '-combine': case '-hitcount': case '-waiting': case '-zbroken': {\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-zpower': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tthis.scene.runOtherAnim('zpower' as ID, [poke]);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-prepare': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet moveid = toID(args[2]);\r\n\t\t\tlet target = this.getPokemon(args[3]) || poke.side.foe.active[0] || poke;\r\n\t\t\tthis.scene.runPrepareAnim(moveid, poke, target);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-mustrecharge': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tpoke.addMovestatus('mustrecharge' as ID);\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-status': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of) || poke;\r\n\t\t\tpoke.status = args[2] as StatusName;\r\n\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\tif (effect.effectType === 'Item') {\r\n\t\t\t\tofpoke.item = effect.name;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (args[2]) {\r\n\t\t\tcase 'brn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Burned', 'brn');\r\n\t\t\t\tthis.scene.runStatusAnim('brn' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'tox':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Toxic poison', 'psn');\r\n\t\t\t\tthis.scene.runStatusAnim('psn' as ID, [poke]);\r\n\t\t\t\tpoke.statusData.toxicTurns = (effect.name === \"Toxic Orb\" ? -1 : 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'psn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Poisoned', 'psn');\r\n\t\t\t\tthis.scene.runStatusAnim('psn' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'slp':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Asleep', 'slp');\r\n\t\t\t\tif (effect.id === 'rest') {\r\n\t\t\t\t\tpoke.statusData.sleepTurns = 0; // for Gen 2 use through Sleep Talk\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'par':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Paralyzed', 'par');\r\n\t\t\t\tthis.scene.runStatusAnim('par' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'frz':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Frozen', 'frz');\r\n\t\t\t\tthis.scene.runStatusAnim('frz' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-curestatus': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\r\n\t\t\tif (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'flamewheel':\r\n\t\t\t\tcase 'flareblitz':\r\n\t\t\t\tcase 'fusionflare':\r\n\t\t\t\tcase 'sacredfire':\r\n\t\t\t\tcase 'scald':\r\n\t\t\t\tcase 'steameruption':\r\n\t\t\t\t\tkwArgs.thaw = '.';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (poke) {\r\n\t\t\t\tpoke.status = '';\r\n\t\t\t\tswitch (args[2]) {\r\n\t\t\t\tcase 'brn':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Burn cured', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'tox':\r\n\t\t\t\tcase 'psn':\r\n\t\t\t\t\tpoke.statusData.toxicTurns = 0;\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Poison cured', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'slp':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Woke up', 'good');\r\n\t\t\t\t\tpoke.statusData.sleepTurns = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'par':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Paralysis cured', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'frz':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Thawed', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tpoke.removeVolatile('confusion' as ID);\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Cured', 'good');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tcase '-cureteam': { // For old gens when the whole team was always cured\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tfor (const target of poke.side.pokemon) {\r\n\t\t\t\ttarget.status = '';\r\n\t\t\t\tthis.scene.updateStatbarIfExists(target);\r\n\t\t\t}\r\n\r\n\t\t\tthis.scene.resultAnim(poke, 'Team Cured', 'good');\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-item': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet item = Dex.items.get(args[2]);\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tpoke.item = item.name;\r\n\t\t\tpoke.itemEffect = '';\r\n\t\t\tpoke.removeVolatile('airballoon' as ID);\r\n\t\t\tif (item.id === 'airballoon') poke.addVolatile('airballoon' as ID);\r\n\r\n\t\t\tif (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'pickup':\r\n\t\t\t\t\tthis.activateAbility(poke, \"Pickup\");\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tcase 'recycle':\r\n\t\t\t\t\tpoke.itemEffect = 'found';\r\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'frisk':\r\n\t\t\t\t\tthis.activateAbility(ofpoke!, \"Frisk\");\r\n\t\t\t\t\tif (poke && poke !== ofpoke) { // used for gen 6\r\n\t\t\t\t\t\tpoke.itemEffect = 'frisked';\r\n\t\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'magician':\r\n\t\t\t\tcase 'pickpocket':\r\n\t\t\t\t\tthis.activateAbility(poke, effect.name);\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tcase 'thief':\r\n\t\t\t\tcase 'covet':\r\n\t\t\t\t\t// simulate the removal of the item from the ofpoke\r\n\t\t\t\t\tofpoke!.item = '';\r\n\t\t\t\t\tofpoke!.itemEffect = '';\r\n\t\t\t\t\tofpoke!.prevItem = item.name;\r\n\t\t\t\t\tofpoke!.prevItemEffect = 'stolen';\r\n\t\t\t\t\tofpoke!.addVolatile('itemremoved' as ID);\r\n\t\t\t\t\tpoke.itemEffect = 'stolen';\r\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\tthis.scene.resultAnim(ofpoke!, 'Item Stolen', 'bad');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'harvest':\r\n\t\t\t\t\tpoke.itemEffect = 'harvested';\r\n\t\t\t\t\tthis.activateAbility(poke, \"Harvest\");\r\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bestow':\r\n\t\t\t\t\tpoke.itemEffect = 'bestowed';\r\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'switcheroo':\r\n\t\t\t\tcase 'trick':\r\n\t\t\t\t\tpoke.itemEffect = 'tricked';\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswitch (item.id) {\r\n\t\t\t\tcase 'airballoon':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Balloon', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-enditem': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet item = Dex.items.get(args[2]);\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tif (this.gen > 4 || effect.id !== 'knockoff') {\r\n\t\t\t\tpoke.item = '';\r\n\t\t\t\tpoke.itemEffect = '';\r\n\t\t\t\tpoke.prevItem = item.name;\r\n\t\t\t\tpoke.prevItemEffect = '';\r\n\t\t\t}\r\n\t\t\tpoke.removeVolatile('airballoon' as ID);\r\n\t\t\tpoke.addVolatile('itemremoved' as ID);\r\n\t\t\tif (kwArgs.eat) {\r\n\t\t\t\tpoke.prevItemEffect = 'eaten';\r\n\t\t\t\tthis.scene.runOtherAnim('consume' as ID, [poke]);\r\n\t\t\t\tthis.lastMove = item.id;\r\n\t\t\t} else if (kwArgs.weaken) {\r\n\t\t\t\tpoke.prevItemEffect = 'eaten';\r\n\t\t\t\tthis.lastMove = item.id;\r\n\t\t\t} else if (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'fling':\r\n\t\t\t\t\tpoke.prevItemEffect = 'flung';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'knockoff':\r\n\t\t\t\t\tif (this.gen <= 4) {\r\n\t\t\t\t\t\tpoke.itemEffect = 'knocked off';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpoke.prevItemEffect = 'knocked off';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.scene.runOtherAnim('itemoff' as ID, [poke]);\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Item knocked off', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'stealeat':\r\n\t\t\t\t\tpoke.prevItemEffect = 'stolen';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'gem':\r\n\t\t\t\t\tpoke.prevItemEffect = 'consumed';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'incinerate':\r\n\t\t\t\t\tpoke.prevItemEffect = 'incinerated';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswitch (item.id) {\r\n\t\t\t\tcase 'airballoon':\r\n\t\t\t\t\tpoke.prevItemEffect = 'popped';\r\n\t\t\t\t\tpoke.removeVolatile('airballoon' as ID);\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Balloon popped', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'focussash':\r\n\t\t\t\t\tpoke.prevItemEffect = 'consumed';\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Sash', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'focusband':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Focus Band', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'redcard':\r\n\t\t\t\t\tpoke.prevItemEffect = 'held up';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tpoke.prevItemEffect = 'consumed';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-ability': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet ability = Dex.abilities.get(args[2]);\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tpoke.rememberAbility(ability.name, effect.id && !kwArgs.fail);\r\n\r\n\t\t\tif (kwArgs.silent) {\r\n\t\t\t\t// do nothing\r\n\t\t\t} else if (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'trace':\r\n\t\t\t\t\tthis.activateAbility(poke, \"Trace\");\r\n\t\t\t\t\tthis.scene.wait(500);\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name, true);\r\n\t\t\t\t\tofpoke!.rememberAbility(ability.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'powerofalchemy':\r\n\t\t\t\tcase 'receiver':\r\n\t\t\t\t\tthis.activateAbility(poke, effect.name);\r\n\t\t\t\t\tthis.scene.wait(500);\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name, true);\r\n\t\t\t\t\tofpoke!.rememberAbility(ability.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'roleplay':\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name, true);\r\n\t\t\t\t\tofpoke!.rememberAbility(ability.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'desolateland':\r\n\t\t\t\tcase 'primordialsea':\r\n\t\t\t\tcase 'deltastream':\r\n\t\t\t\t\tif (kwArgs.fail) {\r\n\t\t\t\t\t\tthis.activateAbility(poke, ability.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.activateAbility(poke, ability.name);\r\n\t\t\t}\r\n\t\t\tthis.scene.updateWeather();\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-endability': {\r\n\t\t\t// deprecated; use |-start| for Gastro Acid\r\n\t\t\t// and the third arg of |-ability| for Entrainment et al\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet ability = Dex.abilities.get(args[2]);\r\n\t\t\tpoke.ability = '(suppressed)';\r\n\r\n\t\t\tif (ability.id) {\r\n\t\t\t\tif (!poke.baseAbility) poke.baseAbility = ability.name;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'detailschange': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tpoke.removeVolatile('formechange' as ID);\r\n\t\t\tpoke.removeVolatile('typeadd' as ID);\r\n\t\t\tpoke.removeVolatile('typechange' as ID);\r\n\r\n\t\t\tlet newSpeciesForme = args[2];\r\n\t\t\tlet commaIndex = newSpeciesForme.indexOf(',');\r\n\t\t\tif (commaIndex !== -1) {\r\n\t\t\t\tlet level = newSpeciesForme.substr(commaIndex + 1).trim();\r\n\t\t\t\tif (level.charAt(0) === 'L') {\r\n\t\t\t\t\tpoke.level = parseInt(level.substr(1), 10);\r\n\t\t\t\t}\r\n\t\t\t\tnewSpeciesForme = args[2].substr(0, commaIndex);\r\n\t\t\t}\r\n\t\t\tlet species = this.dex.species.get(newSpeciesForme);\r\n\r\n\t\t\tpoke.speciesForme = newSpeciesForme;\r\n\t\t\tpoke.ability = poke.baseAbility = (species.abilities ? species.abilities['0'] : '');\r\n\r\n\t\t\tpoke.details = args[2];\r\n\t\t\tpoke.searchid = args[1].substr(0, 2) + args[1].substr(3) + '|' + args[2];\r\n\r\n\t\t\tthis.scene.animTransform(poke, true, true);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-transform': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet tpoke = this.getPokemon(args[2])!;\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tif (poke === tpoke) throw new Error(\"Transforming into self\");\r\n\r\n\t\t\tif (!kwArgs.silent) {\r\n\t\t\t\tthis.activateAbility(poke, effect);\r\n\t\t\t}\r\n\r\n\t\t\tpoke.boosts = {...tpoke.boosts};\r\n\t\t\tpoke.copyTypesFrom(tpoke);\r\n\t\t\tpoke.ability = tpoke.ability;\r\n\t\t\tconst targetForme = tpoke.volatiles.formechange;\r\n\t\t\tconst speciesForme = (targetForme && !targetForme[1].endsWith('-Gmax')) ? targetForme[1] : tpoke.speciesForme;\r\n\t\t\tconst pokemon = tpoke;\r\n\t\t\tconst shiny = tpoke.shiny;\r\n\t\t\tconst gender = tpoke.gender;\r\n\t\t\tconst level = tpoke.level;\r\n\t\t\tpoke.addVolatile('transform' as ID, pokemon, shiny, gender, level);\r\n\t\t\tpoke.addVolatile('formechange' as ID, speciesForme);\r\n\t\t\tfor (const trackedMove of tpoke.moveTrack) {\r\n\t\t\t\tpoke.rememberMove(trackedMove[0], 0);\r\n\t\t\t}\r\n\t\t\tthis.scene.animTransform(poke);\r\n\t\t\tthis.scene.resultAnim(poke, 'Transformed', 'good');\r\n\t\t\tthis.log(['-transform', args[1], args[2], tpoke.speciesForme], kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-formechange': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet species = Dex.species.get(args[2]);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet isCustomAnim = species.name.startsWith('Wishiwashi');\r\n\t\t\tif (!poke.getSpeciesForme().endsWith('-Gmax') && !species.name.endsWith('-Gmax')) {\r\n\t\t\t\tpoke.removeVolatile('typeadd' as ID);\r\n\t\t\t\tpoke.removeVolatile('typechange' as ID);\r\n\t\t\t\tif (this.gen >= 6) poke.removeVolatile('autotomize' as ID);\r\n\t\t\t}\r\n\r\n\t\t\tif (!kwArgs.silent) {\r\n\t\t\t\tthis.activateAbility(poke, fromeffect);\r\n\t\t\t}\r\n\t\t\tpoke.addVolatile('formechange' as ID, species.name); // the formechange volatile reminds us to revert the sprite change on switch-out\r\n\t\t\tthis.scene.animTransform(poke, isCustomAnim);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-mega': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet item = Dex.items.get(args[3]);\r\n\t\t\tif (args[3]) {\r\n\t\t\t\tpoke.item = item.name;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-primal': case '-burst': {\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-start': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\r\n\t\t\tthis.activateAbility(poke, effect);\r\n\t\t\tthis.activateAbility(ofpoke || poke, fromeffect);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'typechange':\r\n\t\t\t\tif (ofpoke && fromeffect.id === 'reflecttype') {\r\n\t\t\t\t\tpoke.copyTypesFrom(ofpoke);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst types = Dex.sanitizeName(args[3] || '???');\r\n\t\t\t\t\tpoke.removeVolatile('typeadd' as ID);\r\n\t\t\t\t\tpoke.addVolatile('typechange' as ID, types);\r\n\t\t\t\t\tif (!kwArgs.silent) {\r\n\t\t\t\t\t\tthis.scene.typeAnim(poke, types);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'typeadd':\r\n\t\t\t\tconst type = Dex.sanitizeName(args[3]);\r\n\t\t\t\tpoke.addVolatile('typeadd' as ID, type);\r\n\t\t\t\tif (kwArgs.silent) break;\r\n\t\t\t\tthis.scene.typeAnim(poke, type);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dynamax':\r\n\t\t\t\tpoke.addVolatile('dynamax' as ID, !!args[3]);\r\n\t\t\t\tthis.scene.animTransform(poke, true);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'powertrick':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Power Trick', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'foresight':\r\n\t\t\tcase 'miracleeye':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Identified', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'telekinesis':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Telekinesis', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'confusion':\r\n\t\t\t\tif (!kwArgs.already) {\r\n\t\t\t\t\tthis.scene.runStatusAnim('confused' as ID, [poke]);\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Confused', 'bad');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'leechseed':\r\n\t\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'healblock':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Heal Block', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'yawn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Drowsy', 'slp');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'taunt':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Taunted', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'imprison':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Imprisoning', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'disable':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Disabled', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'embargo':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Embargo', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'torment':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Tormented', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'ingrain':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Ingrained', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'aquaring':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Aqua Ring', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'stockpile1':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Stockpile', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'stockpile2':\r\n\t\t\t\tpoke.removeVolatile('stockpile1' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Stockpile&times;2', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'stockpile3':\r\n\t\t\t\tpoke.removeVolatile('stockpile2' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Stockpile&times;3', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'perish0':\r\n\t\t\t\tpoke.removeVolatile('perish1' as ID);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'perish1':\r\n\t\t\t\tpoke.removeVolatile('perish2' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Perish next turn', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'perish2':\r\n\t\t\t\tpoke.removeVolatile('perish3' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Perish in 2', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'perish3':\r\n\t\t\t\tif (!kwArgs.silent) this.scene.resultAnim(poke, 'Perish in 3', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'encore':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Encored', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'bide':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Bide', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'attract':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Attracted', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'autotomize':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Lightened', 'good');\r\n\t\t\t\tif (poke.volatiles.autotomize) {\r\n\t\t\t\t\tpoke.volatiles.autotomize[1]++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpoke.addVolatile('autotomize' as ID, 1);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'focusenergy':\r\n\t\t\t\tthis.scene.resultAnim(poke, '+Crit rate', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'curse':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Cursed', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'nightmare':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Nightmare', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'magnetrise':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Magnet Rise', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'smackdown':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Smacked Down', 'bad');\r\n\t\t\t\tpoke.removeVolatile('magnetrise' as ID);\r\n\t\t\t\tpoke.removeVolatile('telekinesis' as ID);\r\n\t\t\t\tif (poke.lastMove === 'fly' || poke.lastMove === 'bounce') this.scene.animReset(poke);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'substitute':\r\n\t\t\t\tif (kwArgs.damage) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Damage', 'bad');\r\n\t\t\t\t} else if (kwArgs.block) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Blocked', 'neutral');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// Gen 1-2\r\n\t\t\tcase 'mist':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Mist', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\t// Gen 1\r\n\t\t\tcase 'lightscreen':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Light Screen', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'reflect':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Reflect', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tpoke.addVolatile(effect.id);\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-end': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tpoke.removeVolatile(effect.id);\r\n\r\n\t\t\tif (kwArgs.silent) {\r\n\t\t\t\t// do nothing\r\n\t\t\t} else {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'dynamax':\r\n\t\t\t\t\tthis.scene.animTransform(poke);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'powertrick':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Power Trick', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'telekinesis':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Telekinesis&nbsp;ended', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'skydrop':\r\n\t\t\t\t\tif (kwArgs.interrupt) {\r\n\t\t\t\t\t\tthis.scene.anim(poke, {time: 100});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'confusion':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Confusion&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'leechseed':\r\n\t\t\t\t\tif (fromeffect.id === 'rapidspin') {\r\n\t\t\t\t\t\tthis.scene.resultAnim(poke, 'De-seeded', 'good');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'healblock':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Heal Block ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'attract':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Attract&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'taunt':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Taunt&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'disable':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Disable&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'embargo':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Embargo ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'torment':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Torment&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'encore':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Encore&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bide':\r\n\t\t\t\t\tthis.scene.runOtherAnim('bideunleash' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'illusion':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Illusion ended', 'bad');\r\n\t\t\t\t\tpoke.rememberAbility('Illusion');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'slowstart':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Slow Start ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'perishsong': // for backwards compatibility\r\n\t\t\t\t\tpoke.removeVolatile('perish3' as ID);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'substitute':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Faded', 'bad');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'stockpile':\r\n\t\t\t\t\tpoke.removeVolatile('stockpile1' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('stockpile2' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('stockpile3' as ID);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (effect.effectType === 'Move') {\r\n\t\t\t\t\t\tif (effect.name === 'Doom Desire') {\r\n\t\t\t\t\t\t\tthis.scene.runOtherAnim('doomdesirehit' as ID, [poke]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (effect.name === 'Future Sight') {\r\n\t\t\t\t\t\t\tthis.scene.runOtherAnim('futuresighthit' as ID, [poke]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-singleturn': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tif (effect.id === 'roost' && !poke.getTypeList().includes('Flying')) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tpoke.addTurnstatus(effect.id);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'roost':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Landed', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'quickguard':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Quick Guard', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'wideguard':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Wide Guard', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'craftyshield':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Crafty Shield', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'matblock':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Mat Block', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'protect':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Protected', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'endure':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Enduring', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'helpinghand':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Helping Hand', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'focuspunch':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Focusing', 'neutral');\r\n\t\t\t\tpoke.rememberMove(effect.name, 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'shelltrap':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Trap set', 'neutral');\r\n\t\t\t\tpoke.rememberMove(effect.name, 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'beakblast':\r\n\t\t\t\tthis.scene.runOtherAnim('bidecharge' as ID, [poke]);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Beak Blast', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-singlemove': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tpoke.addMovestatus(effect.id);\r\n\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'grudge':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Grudge', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'destinybond':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Destiny Bond', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-activate': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet target = this.getPokemon(args[3]);\r\n\t\t\tthis.activateAbility(poke, effect);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'poltergeist':\r\n\t\t\t\tpoke.item = kwArgs.item;\r\n\t\t\t\tpoke.itemEffect = 'disturbed';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'grudge':\r\n\t\t\t\tpoke.rememberMove(kwArgs.move, Infinity);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'substitute':\r\n\t\t\t\tif (kwArgs.damage) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Damage', 'bad');\r\n\t\t\t\t} else if (kwArgs.block) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Blocked', 'neutral');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'attract':\r\n\t\t\t\tthis.scene.runStatusAnim('attracted' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'bide':\r\n\t\t\t\tthis.scene.runOtherAnim('bidecharge' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// move activations\r\n\t\t\tcase 'aromatherapy':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Team Cured', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'healbell':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Team Cured', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'brickbreak':\r\n\t\t\t\ttarget!.side.removeSideCondition('Reflect');\r\n\t\t\t\ttarget!.side.removeSideCondition('LightScreen');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hyperspacefury':\r\n\t\t\tcase 'hyperspacehole':\r\n\t\t\tcase 'phantomforce':\r\n\t\t\tcase 'shadowforce':\r\n\t\t\tcase 'feint':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Protection broken', 'bad');\r\n\t\t\t\tpoke.removeTurnstatus('protect' as ID);\r\n\t\t\t\tfor (const curTarget of poke.side.pokemon) {\r\n\t\t\t\t\tcurTarget.removeTurnstatus('wideguard' as ID);\r\n\t\t\t\t\tcurTarget.removeTurnstatus('quickguard' as ID);\r\n\t\t\t\t\tcurTarget.removeTurnstatus('craftyshield' as ID);\r\n\t\t\t\t\tcurTarget.removeTurnstatus('matblock' as ID);\r\n\t\t\t\t\tthis.scene.updateStatbar(curTarget);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'eeriespell':\r\n\t\t\tcase 'gmaxdepletion':\r\n\t\t\tcase 'spite':\r\n\t\t\t\tlet move = Dex.moves.get(kwArgs.move).name;\r\n\t\t\t\tlet pp = Number(kwArgs.number);\r\n\t\t\t\tif (isNaN(pp)) pp = 4;\r\n\t\t\t\tpoke.rememberMove(move, pp);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'gravity':\r\n\t\t\t\tpoke.removeVolatile('magnetrise' as ID);\r\n\t\t\t\tpoke.removeVolatile('telekinesis' as ID);\r\n\t\t\t\tthis.scene.anim(poke, {time: 100});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'skillswap': case 'wanderingspirit':\r\n\t\t\t\tif (this.gen <= 4) break;\r\n\t\t\t\tlet pokeability = Dex.sanitizeName(kwArgs.ability) || target!.ability;\r\n\t\t\t\tlet targetability = Dex.sanitizeName(kwArgs.ability2) || poke.ability;\r\n\t\t\t\tif (pokeability) {\r\n\t\t\t\t\tpoke.ability = pokeability;\r\n\t\t\t\t\tif (!target!.baseAbility) target!.baseAbility = pokeability;\r\n\t\t\t\t}\r\n\t\t\t\tif (targetability) {\r\n\t\t\t\t\ttarget!.ability = targetability;\r\n\t\t\t\t\tif (!poke.baseAbility) poke.baseAbility = targetability;\r\n\t\t\t\t}\r\n\t\t\t\tif (poke.side !== target!.side) {\r\n\t\t\t\t\tthis.activateAbility(poke, pokeability, true);\r\n\t\t\t\t\tthis.activateAbility(target, targetability, true);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// ability activations\r\n\t\t\tcase 'forewarn':\r\n\t\t\t\tif (target) {\r\n\t\t\t\t\ttarget.rememberMove(kwArgs.move, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet foeActive = [] as Pokemon[];\r\n\t\t\t\t\tfor (const maybeTarget of poke.side.foe.active) {\r\n\t\t\t\t\t\tif (maybeTarget && !maybeTarget.fainted) foeActive.push(maybeTarget);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (foeActive.length === 1) {\r\n\t\t\t\t\t\tfoeActive[0].rememberMove(kwArgs.move, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'mummy':\r\n\t\t\t\tif (!kwArgs.ability) break; // if Mummy activated but failed, no ability will have been sent\r\n\t\t\t\tlet ability = Dex.abilities.get(kwArgs.ability);\r\n\t\t\t\tthis.activateAbility(target, ability.name);\r\n\t\t\t\tthis.activateAbility(poke, \"Mummy\");\r\n\t\t\t\tthis.scene.wait(700);\r\n\t\t\t\tthis.activateAbility(target, \"Mummy\", true);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// item activations\r\n\t\t\tcase 'leppaberry':\r\n\t\t\tcase 'mysteryberry':\r\n\t\t\t\tpoke.rememberMove(kwArgs.move, effect.id === 'leppaberry' ? -10 : -5);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'focusband':\r\n\t\t\t\tpoke.item = 'Focus Band';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'quickclaw':\r\n\t\t\t\tpoke.item = 'Quick Claw';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (kwArgs.broken) { // for custom moves that break protection\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Protection broken', 'bad');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-sidestart': {\r\n\t\t\tlet side = this.getSide(args[1]);\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tside.addSideCondition(effect);\r\n\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'tailwind':\r\n\t\t\tcase 'auroraveil':\r\n\t\t\tcase 'reflect':\r\n\t\t\tcase 'lightscreen':\r\n\t\t\tcase 'safeguard':\r\n\t\t\tcase 'mist':\r\n\t\t\tcase 'gmaxwildfire':\r\n\t\t\tcase 'gmaxvolcalith':\r\n\t\t\tcase 'gmaxvinelash':\r\n\t\t\tcase 'gmaxcannonade':\r\n\t\t\tcase 'grasspledge':\r\n\t\t\tcase 'firepledge':\r\n\t\t\tcase 'waterpledge':\r\n\t\t\t\tthis.scene.updateWeather();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-sideend': {\r\n\t\t\tlet side = this.getSide(args[1]);\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\t// let from = Dex.getEffect(kwArgs.from);\r\n\t\t\t// let ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tside.removeSideCondition(effect.name);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-swapsideconditions': {\r\n\t\t\tthis.swapSideConditions();\r\n\t\t\tthis.scene.updateWeather();\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-weather': {\r\n\t\t\tlet effect = Dex.getEffect(args[1]);\r\n\t\t\tlet poke = this.getPokemon(kwArgs.of) || undefined;\r\n\t\t\tlet ability = Dex.getEffect(kwArgs.from);\r\n\t\t\tif (!effect.id || effect.id === 'none') {\r\n\t\t\t\tkwArgs.from = this.weather;\r\n\t\t\t}\r\n\t\t\tthis.changeWeather(effect.name, poke, !!kwArgs.upkeep, ability);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-fieldstart': {\r\n\t\t\tlet effect = Dex.getEffect(args[1]);\r\n\t\t\tlet poke = this.getPokemon(kwArgs.of);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tthis.activateAbility(poke, fromeffect);\r\n\t\t\tlet maxTimeLeft = 0;\r\n\t\t\tif (effect.id.endsWith('terrain')) {\r\n\t\t\t\tfor (let i = this.pseudoWeather.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tlet pwID = toID(this.pseudoWeather[i][0]);\r\n\t\t\t\t\tif (pwID.endsWith('terrain')) {\r\n\t\t\t\t\t\tthis.pseudoWeather.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.gen > 6) maxTimeLeft = 8;\r\n\t\t\t}\r\n\t\t\tthis.addPseudoWeather(effect.name, 5, maxTimeLeft);\r\n\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'gravity':\r\n\t\t\t\tif (this.seeking !== null) break;\r\n\t\t\t\tfor (const side of this.sides) {\r\n\t\t\t\t\tfor (const active of side.active) {\r\n\t\t\t\t\t\tif (active) this.scene.runOtherAnim('gravity' as ID, [active]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-fieldend': {\r\n\t\t\tlet effect = Dex.getEffect(args[1]);\r\n\t\t\t// let poke = this.getPokemon(kwArgs.of);\r\n\t\t\tthis.removePseudoWeather(effect.name);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-fieldactivate': {\r\n\t\t\tlet effect = Dex.getEffect(args[1]);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'perishsong':\r\n\t\t\t\tthis.scene.updateStatbars();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-anim': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet move = Dex.moves.get(args[2]);\r\n\t\t\tif (this.checkActive(poke)) return;\r\n\t\t\tlet poke2 = this.getPokemon(args[3]);\r\n\t\t\tthis.scene.beforeMove(poke);\r\n\t\t\tthis.animateMove(poke, move, poke2, kwArgs);\r\n\t\t\tthis.scene.afterMove(poke);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-hint': case '-message': case '-candynamax': {\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\tthrow new Error(`Unrecognized minor action: ${args[0]}`);\r\n\t\t\tbreak;\r\n\t\t}}\r\n\t}\r\n\t/*\r\n\tparseSpriteData(name) {\r\n\t\tlet siden = 0,\r\n\t\t\tfoe = false;\r\n\t\twhile (true) {\r\n\t\t\tif (name.substr(0, 6) === 'foeof-') {\r\n\t\t\t\tfoe = true;\r\n\t\t\t\tname = name.substr(6);\r\n\t\t\t} else if (name.substr(0, 9) === 'switched-') name = name.substr(9);\r\n\t\t\telse if (name.substr(0, 9) === 'existing-') name = name.substr(9);\r\n\t\t\telse if (name.substr(0, 4) === 'foe-') {\r\n\t\t\t\tsiden = this.p2.n;\r\n\t\t\t\tname = name.substr(4);\r\n\t\t\t} else if (name.substr(0, 5) === 'ally-') {\r\n\t\t\t\tsiden = this.p1.n;\r\n\t\t\t\tname = name.substr(5);\r\n\t\t\t} else break;\r\n\t\t}\r\n\t\tif (name.substr(name.length - 1) === ')') {\r\n\t\t\tlet parenIndex = name.lastIndexOf('(');\r\n\t\t\tif (parenIndex > 0) {\r\n\t\t\t\tlet species = name.substr(parenIndex + 1);\r\n\t\t\t\tname = species.substr(0, species.length - 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (foe) siden = (siden ? 0 : 1);\r\n\r\n\t\tlet data = Dex.species.get(name);\r\n\t\treturn data.spriteData[siden];\r\n\t}\r\n\t*/\r\n\t/**\r\n\t * @param name Leave blank for Team Preview\r\n\t * @param pokemonid Leave blank for Team Preview\r\n\t * @param details\r\n\t * @param output\r\n\t */\r\n\tparseDetails(name: string, pokemonid: string, details: string, output: PokemonDetails = {} as any) {\r\n\t\tconst isTeamPreview = !name;\r\n\t\toutput.details = details;\r\n\t\toutput.name = name;\r\n\t\toutput.speciesForme = name;\r\n\t\toutput.level = 100;\r\n\t\toutput.shiny = false;\r\n\t\toutput.gender = '';\r\n\t\toutput.ident = (!isTeamPreview ? pokemonid : '');\r\n\t\toutput.searchid = (!isTeamPreview ? `${pokemonid}|${details}` : '');\r\n\t\tlet splitDetails = details.split(', ');\r\n\t\tif (splitDetails[splitDetails.length - 1] === 'shiny') {\r\n\t\t\toutput.shiny = true;\r\n\t\t\tsplitDetails.pop();\r\n\t\t}\r\n\t\tif (splitDetails[splitDetails.length - 1] === 'M' || splitDetails[splitDetails.length - 1] === 'F') {\r\n\t\t\toutput.gender = splitDetails[splitDetails.length - 1] as GenderName;\r\n\t\t\tsplitDetails.pop();\r\n\t\t}\r\n\t\tif (splitDetails[1]) {\r\n\t\t\toutput.level = parseInt(splitDetails[1].substr(1), 10) || 100;\r\n\t\t}\r\n\t\tif (splitDetails[0]) {\r\n\t\t\toutput.speciesForme = splitDetails[0];\r\n\t\t}\r\n\t\treturn output;\r\n\t}\r\n\tparseHealth(hpstring: string, output: PokemonHealth = {} as any) {\r\n\t\tlet [hp, status] = hpstring.split(' ');\r\n\r\n\t\t// hp parse\r\n\t\toutput.hpcolor = '';\r\n\t\tif (hp === '0' || hp === '0.0') {\r\n\t\t\tif (!output.maxhp) output.maxhp = 100;\r\n\t\t\toutput.hp = 0;\r\n\t\t} else if (hp.indexOf('/') > 0) {\r\n\t\t\tlet [curhp, maxhp] = hp.split('/');\r\n\t\t\tif (isNaN(parseFloat(curhp)) || isNaN(parseFloat(maxhp))) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\toutput.hp = parseFloat(curhp);\r\n\t\t\toutput.maxhp = parseFloat(maxhp);\r\n\t\t\tif (output.hp > output.maxhp) output.hp = output.maxhp;\r\n\t\t\tconst colorchar = maxhp.slice(-1);\r\n\t\t\tif (colorchar === 'y' || colorchar === 'g') {\r\n\t\t\t\toutput.hpcolor = colorchar;\r\n\t\t\t}\r\n\t\t} else if (!isNaN(parseFloat(hp))) {\r\n\t\t\tif (!output.maxhp) output.maxhp = 100;\r\n\t\t\toutput.hp = output.maxhp * parseFloat(hp) / 100;\r\n\t\t}\r\n\r\n\t\t// status parse\r\n\t\tif (!status) {\r\n\t\t\toutput.status = '';\r\n\t\t} else if (status === 'par' || status === 'brn' || status === 'slp' || status === 'frz' || status === 'tox') {\r\n\t\t\toutput.status = status;\r\n\t\t} else if (status === 'psn' && output.status !== 'tox') {\r\n\t\t\toutput.status = status;\r\n\t\t} else if (status === 'fnt') {\r\n\t\t\toutput.hp = 0;\r\n\t\t\toutput.fainted = true;\r\n\t\t}\r\n\t\treturn output;\r\n\t}\r\n\tparsePokemonId(pokemonid: string) {\r\n\t\tlet name = pokemonid;\r\n\r\n\t\tlet siden = -1;\r\n\t\tlet slot = -1; // if there is an explicit slot for this pokemon\r\n\t\tif (/^p[1-9]($|: )/.test(name)) {\r\n\t\t\tsiden = parseInt(name.charAt(1), 10) - 1;\r\n\t\t\tname = name.slice(4);\r\n\t\t} else if (/^p[1-9][a-f]: /.test(name)) {\r\n\t\t\tconst slotChart: {[k: string]: number} = {a: 0, b: 1, c: 2, d: 3, e: 4, f: 5};\r\n\t\t\tsiden = parseInt(name.charAt(1), 10) - 1;\r\n\t\t\tslot = slotChart[name.charAt(2)];\r\n\t\t\tname = name.slice(5);\r\n\t\t\tpokemonid = `p${siden + 1}: ${name}`;\r\n\t\t}\r\n\t\treturn {name, siden, slot, pokemonid};\r\n\t}\r\n\tgetSwitchedPokemon(pokemonid: string, details: string) {\r\n\t\tif (pokemonid === '??') throw new Error(`pokemonid not passed`);\r\n\t\tconst {name, siden, slot, pokemonid: parsedPokemonid} = this.parsePokemonId(pokemonid);\r\n\t\tpokemonid = parsedPokemonid;\r\n\r\n\t\tconst searchid = `${pokemonid}|${details}`;\r\n\t\tconst side = this.sides[siden];\r\n\r\n\t\t// search inactive revealed pokemon\r\n\t\tfor (let i = 0; i < side.pokemon.length; i++) {\r\n\t\t\tlet pokemon = side.pokemon[i];\r\n\t\t\tif (pokemon.fainted) continue;\r\n\t\t\t// already active, can't be switching in\r\n\t\t\tif (side.active.includes(pokemon)) continue;\r\n\t\t\t// just switched out, can't be switching in\r\n\t\t\tif (pokemon === side.lastPokemon && !side.active[slot]) continue;\r\n\r\n\t\t\tif (pokemon.searchid === searchid) {\r\n\t\t\t\t// exact match\r\n\t\t\t\tif (slot >= 0) pokemon.slot = slot;\r\n\t\t\t\treturn pokemon;\r\n\t\t\t}\r\n\t\t\tif (!pokemon.searchid && pokemon.checkDetails(details)) {\r\n\t\t\t\t// switch-in matches Team Preview entry\r\n\t\t\t\tpokemon = side.addPokemon(name, pokemonid, details, i);\r\n\t\t\t\tif (slot >= 0) pokemon.slot = slot;\r\n\t\t\t\treturn pokemon;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// pokemon not found, create a new pokemon object for it\r\n\t\tconst pokemon = side.addPokemon(name, pokemonid, details);\r\n\t\tif (slot >= 0) pokemon.slot = slot;\r\n\t\treturn pokemon;\r\n\t}\r\n\trememberTeamPreviewPokemon(sideid: string, details: string) {\r\n\t\tconst {siden} = this.parsePokemonId(sideid);\r\n\r\n\t\treturn this.sides[siden].addPokemon('', '', details);\r\n\t}\r\n\tfindCorrespondingPokemon(serverPokemon: {ident: string, details: string}) {\r\n\t\tconst {siden} = this.parsePokemonId(serverPokemon.ident);\r\n\t\tconst searchid = `${serverPokemon.ident}|${serverPokemon.details}`;\r\n\t\tfor (const pokemon of this.sides[siden].pokemon) {\r\n\t\t\tif (pokemon.searchid === searchid) {\r\n\t\t\t\treturn pokemon;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\tgetPokemon(pokemonid: string | undefined) {\r\n\t\tif (!pokemonid || pokemonid === '??' || pokemonid === 'null' || pokemonid === 'false') {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tconst {siden, slot, pokemonid: parsedPokemonid} = this.parsePokemonId(pokemonid);\r\n\t\tpokemonid = parsedPokemonid;\r\n\r\n\t\t/** if true, don't match an active pokemon */\r\n\t\tconst isInactive = (slot < 0);\r\n\t\tconst side = this.sides[siden];\r\n\r\n\t\t// search player's pokemon\r\n\t\tif (!isInactive && side.active[slot]) return side.active[slot];\r\n\r\n\t\tfor (const pokemon of side.pokemon) {\r\n\t\t\tif (isInactive && side.active.includes(pokemon)) continue;\r\n\t\t\tif (pokemon.ident === pokemonid) { // name matched, good enough\r\n\t\t\t\tif (slot >= 0) pokemon.slot = slot;\r\n\t\t\t\treturn pokemon;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\tgetSide(sidename: string): Side {\r\n\t\tif (sidename === 'p1' || sidename.startsWith('p1:')) return this.p1;\r\n\t\tif (sidename === 'p2' || sidename.startsWith('p2:')) return this.p2;\r\n\t\tif ((sidename === 'p3' || sidename.startsWith('p3:')) && this.p3) return this.p3;\r\n\t\tif ((sidename === 'p4' || sidename.startsWith('p4:')) && this.p4) return this.p4;\r\n\t\tif (this.nearSide.id === sidename) return this.nearSide;\r\n\t\tif (this.farSide.id === sidename) return this.farSide;\r\n\t\tif (this.nearSide.name === sidename) return this.nearSide;\r\n\t\tif (this.farSide.name === sidename) return this.farSide;\r\n\t\treturn {\r\n\t\t\tname: sidename,\r\n\t\t\tid: sidename.replace(/ /g, ''),\r\n\t\t} as any;\r\n\t}\r\n\r\n\tadd(command?: string) {\r\n\t\tif (command) this.stepQueue.push(command);\r\n\r\n\t\tif (this.atQueueEnd && this.currentStep < this.stepQueue.length) {\r\n\t\t\tthis.atQueueEnd = false;\r\n\t\t\tthis.nextStep();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * PS's preempt system is intended to show chat messages immediately,\r\n\t * instead of waiting for the battle to get to the point where the\r\n\t * message was said.\r\n\t *\r\n\t * In addition to being a nice quality-of-life feature, it's also\r\n\t * important to make sure timer updates happen in real-time.\r\n\t */\r\n\tinstantAdd(command: string) {\r\n\t\tthis.run(command, true);\r\n\t\tthis.preemptStepQueue.push(command);\r\n\t\tthis.add(command);\r\n\t}\r\n\trunMajor(args: Args, kwArgs: KWArgs, preempt?: boolean) {\r\n\t\tswitch (args[0]) {\r\n\t\tcase 'start': {\r\n\t\t\tthis.nearSide.active[0] = null;\r\n\t\t\tthis.farSide.active[0] = null;\r\n\t\t\tthis.scene.resetSides();\r\n\t\t\tthis.start();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'upkeep': {\r\n\t\t\tthis.usesUpkeep = true;\r\n\t\t\tthis.updateTurnCounters();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'turn': {\r\n\t\t\tthis.setTurn(parseInt(args[1], 10));\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'tier': {\r\n\t\t\tthis.tier = args[1];\r\n\t\t\tif (this.tier.slice(-13) === 'Random Battle') {\r\n\t\t\t\tthis.speciesClause = true;\r\n\t\t\t}\r\n\t\t\tif (this.tier.slice(-8) === ' (Blitz)') {\r\n\t\t\t\tthis.messageFadeTime = 40;\r\n\t\t\t\tthis.isBlitz = true;\r\n\t\t\t}\r\n\t\t\tif (this.tier.includes(`Let's Go`)) {\r\n\t\t\t\tthis.dex = Dex.mod('gen7letsgo' as ID);\r\n\t\t\t}\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'gametype': {\r\n\t\t\tthis.gameType = args[1] as any;\r\n\t\t\tswitch (args[1]) {\r\n\t\t\tcase 'multi':\r\n\t\t\tcase 'freeforall':\r\n\t\t\t\tthis.pokemonControlled = 1;\r\n\t\t\t\tif (!this.p3) this.p3 = new Side(this, 2);\r\n\t\t\t\tif (!this.p4) this.p4 = new Side(this, 3);\r\n\t\t\t\tthis.p3.foe = this.p2;\r\n\t\t\t\tthis.p4.foe = this.p1;\r\n\r\n\t\t\t\tif (args[1] === 'multi') {\r\n\t\t\t\t\tthis.p4.ally = this.p2;\r\n\t\t\t\t\tthis.p3.ally = this.p1;\r\n\t\t\t\t\tthis.p1.ally = this.p3;\r\n\t\t\t\t\tthis.p2.ally = this.p4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.p3.isFar = this.p1.isFar;\r\n\t\t\t\tthis.p4.isFar = this.p2.isFar;\r\n\t\t\t\tthis.sides = [this.p1, this.p2, this.p3, this.p4];\r\n\t\t\t\t// intentionally sync p1/p3 and p2/p4's active arrays\r\n\t\t\t\tthis.p1.active = this.p3.active = [null, null];\r\n\t\t\t\tthis.p2.active = this.p4.active = [null, null];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'doubles':\r\n\t\t\t\tthis.nearSide.active = [null, null];\r\n\t\t\t\tthis.farSide.active = [null, null];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'triples':\r\n\t\t\tcase 'rotation':\r\n\t\t\t\tthis.nearSide.active = [null, null, null];\r\n\t\t\t\tthis.farSide.active = [null, null, null];\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tfor (const side of this.sides) side.active = [null];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!this.pokemonControlled) this.pokemonControlled = this.nearSide.active.length;\r\n\t\t\tthis.scene.updateGen();\r\n\t\t\tthis.scene.resetSides();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'rule': {\r\n\t\t\tlet ruleName = args[1].split(': ')[0];\r\n\t\t\tif (ruleName === 'Species Clause') this.speciesClause = true;\r\n\t\t\tif (ruleName === 'Blitz') {\r\n\t\t\t\tthis.messageFadeTime = 40;\r\n\t\t\t\tthis.isBlitz = true;\r\n\t\t\t}\r\n\t\t\tthis.rules[ruleName] = 1;\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'rated': {\r\n\t\t\tthis.rated = args[1] || true;\r\n\t\t\tthis.scene.updateGen();\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'inactive': {\r\n\t\t\tif (!this.kickingInactive) this.kickingInactive = true;\r\n\t\t\tif (args[1].slice(0, 11) === \"Time left: \") {\r\n\t\t\t\tlet [time, totalTime, graceTime] = args[1].split(' | ');\r\n\t\t\t\tthis.kickingInactive = parseInt(time.slice(11), 10) || true;\r\n\t\t\t\tthis.totalTimeLeft = parseInt(totalTime, 10);\r\n\t\t\t\tthis.graceTimeLeft = parseInt(graceTime || '', 10) || 0;\r\n\t\t\t\tif (this.totalTimeLeft === this.kickingInactive) this.totalTimeLeft = 0;\r\n\t\t\t\treturn;\r\n\t\t\t} else if (args[1].slice(0, 9) === \"You have \") {\r\n\t\t\t\t// this is ugly but parseInt is documented to work this way\r\n\t\t\t\t// so I'm going to be lazy and not chop off the rest of the\r\n\t\t\t\t// sentence\r\n\t\t\t\tthis.kickingInactive = parseInt(args[1].slice(9), 10) || true;\r\n\t\t\t\treturn;\r\n\t\t\t} else if (args[1].slice(-14) === ' seconds left.') {\r\n\t\t\t\tlet hasIndex = args[1].indexOf(' has ');\r\n\t\t\t\tlet userid = window.app?.user?.get('userid');\r\n\t\t\t\tif (toID(args[1].slice(0, hasIndex)) === userid) {\r\n\t\t\t\t\tthis.kickingInactive = parseInt(args[1].slice(hasIndex + 5), 10) || true;\r\n\t\t\t\t}\r\n\t\t\t} else if (args[1].slice(-27) === ' 15 seconds left this turn.') {\r\n\t\t\t\tif (this.isBlitz) return;\r\n\t\t\t}\r\n\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'inactiveoff': {\r\n\t\t\tthis.kickingInactive = false;\r\n\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'join': case 'j': case 'J': {\r\n\t\t\tif (this.roomid) {\r\n\t\t\t\tlet room = app!.rooms[this.roomid];\r\n\t\t\t\tlet user = BattleTextParser.parseNameParts(args[1]);\r\n\t\t\t\tlet userid = toUserid(user.name);\r\n\t\t\t\tif (!room.users[userid]) room.userCount.users++;\r\n\t\t\t\troom.users[userid] = user;\r\n\t\t\t\troom.userList.add(userid);\r\n\t\t\t\troom.userList.updateUserCount();\r\n\t\t\t\troom.userList.updateNoUsersOnline();\r\n\t\t\t}\r\n\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'leave': case 'l': case 'L': {\r\n\t\t\tif (this.roomid) {\r\n\t\t\t\tlet room = app!.rooms[this.roomid];\r\n\t\t\t\tlet user = args[1];\r\n\t\t\t\tlet userid = toUserid(user);\r\n\t\t\t\tif (room.users[userid]) room.userCount.users--;\r\n\t\t\t\tdelete room.users[userid];\r\n\t\t\t\troom.userList.remove(userid);\r\n\t\t\t\troom.userList.updateUserCount();\r\n\t\t\t\troom.userList.updateNoUsersOnline();\r\n\t\t\t}\r\n\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'name': case 'n': case 'N': {\r\n\t\t\tif (this.roomid) {\r\n\t\t\t\tlet room = app!.rooms[this.roomid];\r\n\t\t\t\tlet user = BattleTextParser.parseNameParts(args[1]);\r\n\t\t\t\tlet oldid = args[2];\r\n\t\t\t\tif (toUserid(oldid) === app!.user.get('userid')) {\r\n\t\t\t\t\tapp!.user.set({\r\n\t\t\t\t\t\taway: user.away,\r\n\t\t\t\t\t\tstatus: user.status,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tlet userid = toUserid(user.name);\r\n\t\t\t\troom.users[userid] = user;\r\n\t\t\t\troom.userList.remove(oldid);\r\n\t\t\t\troom.userList.add(userid);\r\n\t\t\t}\r\n\t\t\tif (!this.ignoreSpects) {\r\n\t\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'player': {\r\n\t\t\tlet side = this.getSide(args[1]);\r\n\t\t\tside.setName(args[2]);\r\n\t\t\tif (args[3]) side.setAvatar(args[3]);\r\n\t\t\tif (args[4]) side.rating = args[4];\r\n\t\t\tif (this.joinButtons) this.scene.hideJoinButtons();\r\n\t\t\tthis.log(args);\r\n\t\t\tthis.scene.updateSidebar(side);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'teamsize': {\r\n\t\t\tlet side = this.getSide(args[1]);\r\n\t\t\tside.totalPokemon = parseInt(args[2], 10);\r\n\t\t\tthis.scene.updateSidebar(side);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'win': case 'tie': {\r\n\t\t\tthis.winner(args[0] === 'tie' ? undefined : args[1]);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'prematureend': {\r\n\t\t\tthis.prematureEnd();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'clearpoke': {\r\n\t\t\tthis.p1.clearPokemon();\r\n\t\t\tthis.p2.clearPokemon();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'poke': {\r\n\t\t\tlet pokemon = this.rememberTeamPreviewPokemon(args[1], args[2])!;\r\n\t\t\tif (args[3] === 'mail') {\r\n\t\t\t\tpokemon.item = '(mail)';\r\n\t\t\t} else if (args[3] === 'item') {\r\n\t\t\t\tpokemon.item = '(exists)';\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'updatepoke': {\r\n\t\t\tconst {siden} = this.parsePokemonId(args[1]);\r\n\t\t\tconst side = this.sides[siden];\r\n\t\t\tfor (let i = 0; i < side.pokemon.length; i++) {\r\n\t\t\t\tconst pokemon = side.pokemon[i];\r\n\t\t\t\tif (pokemon.details !== args[2] && pokemon.checkDetails(args[2])) {\r\n\t\t\t\t\tside.addPokemon('', '', args[2], i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'teampreview': {\r\n\t\t\tthis.teamPreviewCount = parseInt(args[1], 10);\r\n\t\t\tthis.scene.teamPreview();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'switch': case 'drag': case 'replace': {\r\n\t\t\tthis.endLastTurn();\r\n\t\t\tlet poke = this.getSwitchedPokemon(args[1], args[2])!;\r\n\t\t\tlet slot = poke.slot;\r\n\t\t\tpoke.healthParse(args[3]);\r\n\t\t\tpoke.removeVolatile('itemremoved' as ID);\r\n\t\t\tif (args[0] === 'switch') {\r\n\t\t\t\tif (poke.side.active[slot]) {\r\n\t\t\t\t\tpoke.side.switchOut(poke.side.active[slot]!, kwArgs);\r\n\t\t\t\t}\r\n\t\t\t\tpoke.side.switchIn(poke);\r\n\t\t\t} else if (args[0] === 'replace') {\r\n\t\t\t\tpoke.side.replace(poke);\r\n\t\t\t} else {\r\n\t\t\t\tpoke.side.dragIn(poke);\r\n\t\t\t}\r\n\t\t\tthis.scene.updateWeather();\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'faint': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tpoke.side.faint(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'swap': {\r\n\t\t\tif (isNaN(Number(args[2]))) {\r\n\t\t\t\tconst poke = this.getPokemon(args[1])!;\r\n\t\t\t\tpoke.side.swapWith(poke, this.getPokemon(args[2])!, kwArgs);\r\n\t\t\t} else {\r\n\t\t\t\tconst poke = this.getPokemon(args[1])!;\r\n\t\t\t\tconst targetIndex = parseInt(args[2], 10);\r\n\t\t\t\tif (kwArgs.from) {\r\n\t\t\t\t\tconst target = poke.side.active[targetIndex];\r\n\t\t\t\t\tif (target) args[2] = target.ident;\r\n\t\t\t\t}\r\n\t\t\t\tpoke.side.swapTo(poke, targetIndex, kwArgs);\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'move': {\r\n\t\t\tthis.endLastTurn();\r\n\t\t\tthis.resetTurnsSinceMoved();\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet move = Dex.moves.get(args[2]);\r\n\t\t\tif (this.checkActive(poke)) return;\r\n\t\t\tlet poke2 = this.getPokemon(args[3]);\r\n\t\t\tthis.scene.beforeMove(poke);\r\n\t\t\tthis.useMove(poke, move, poke2, kwArgs);\r\n\t\t\tthis.animateMove(poke, move, poke2, kwArgs);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tthis.scene.afterMove(poke);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'cant': {\r\n\t\t\tthis.endLastTurn();\r\n\t\t\tthis.resetTurnsSinceMoved();\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet move = Dex.moves.get(args[3]);\r\n\t\t\tthis.cantUseMove(poke, effect, move, kwArgs);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'gen': {\r\n\t\t\tthis.gen = parseInt(args[1], 10);\r\n\t\t\tthis.dex = Dex.forGen(this.gen);\r\n\t\t\tthis.scene.updateGen();\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'callback': {\r\n\t\t\tthis.subscription?.('callback');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'fieldhtml': {\r\n\t\t\tthis.scene.setFrameHTML(BattleLog.sanitizeHTML(args[1]));\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'controlshtml': {\r\n\t\t\tthis.scene.setControlsHTML(BattleLog.sanitizeHTML(args[1]));\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\tthis.log(args, kwArgs, preempt);\r\n\t\t\tbreak;\r\n\t\t}}\r\n\t}\r\n\r\n\trun(str: string, preempt?: boolean) {\r\n\t\tif (!preempt && this.preemptStepQueue.length && str === this.preemptStepQueue[0]) {\r\n\t\t\tthis.preemptStepQueue.shift();\r\n\t\t\tthis.scene.preemptCatchup();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!str) return;\r\n\t\tconst {args, kwArgs} = BattleTextParser.parseBattleLine(str);\r\n\r\n\t\tif (this.scene.maybeCloseMessagebar(args, kwArgs)) {\r\n\t\t\tthis.currentStep--;\r\n\t\t\tthis.activeMoveIsSpread = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// parse the next line if it's a minor: runMinor needs it parsed to determine when to merge minors\r\n\t\tlet nextArgs: Args = [''];\r\n\t\tlet nextKwargs: KWArgs = {};\r\n\t\tconst nextLine = this.stepQueue[this.currentStep + 1] || '';\r\n\t\tif (nextLine.slice(0, 2) === '|-') {\r\n\t\t\t({args: nextArgs, kwArgs: nextKwargs} = BattleTextParser.parseBattleLine(nextLine));\r\n\t\t}\r\n\r\n\t\tif (this.debug) {\r\n\t\t\tif (args[0].charAt(0) === '-' || args[0] === 'detailschange') {\r\n\t\t\t\tthis.runMinor(args, kwArgs, nextArgs, nextKwargs);\r\n\t\t\t} else {\r\n\t\t\t\tthis.runMajor(args, kwArgs, preempt);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tif (args[0].charAt(0) === '-' || args[0] === 'detailschange') {\r\n\t\t\t\t\tthis.runMinor(args, kwArgs, nextArgs, nextKwargs);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.runMajor(args, kwArgs, preempt);\r\n\t\t\t\t}\r\n\t\t\t} catch (err: any) {\r\n\t\t\t\tthis.log(['majorerror', 'Error parsing: ' + str + ' (' + err + ')']);\r\n\t\t\t\tif (err.stack) {\r\n\t\t\t\t\tlet stack = ('' + err.stack).split('\\n');\r\n\t\t\t\t\tfor (const line of stack) {\r\n\t\t\t\t\t\tif (/\\brun\\b/.test(line)) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.log(['error', line]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.subscription?.('error');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (nextLine.startsWith('|start') || args[0] === 'teampreview') {\r\n\t\t\tif (this.turn === -1) {\r\n\t\t\t\tthis.turn = 0;\r\n\t\t\t\tthis.scene.updateBgm();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcheckActive(poke: Pokemon) {\r\n\t\tif (!poke.side.active[poke.slot]) {\r\n\t\t\t// SOMEONE jumped in in the middle of a replay. <_<\r\n\t\t\tpoke.side.replace(poke);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpause() {\r\n\t\tthis.paused = true;\r\n\t\tthis.scene.pause();\r\n\t\tthis.subscription?.('paused');\r\n\t}\r\n\t/**\r\n\t * Properties relevant to battle playback, for replay UI implementers:\r\n\t * - `ended`: has the game ended in a win/loss?\r\n\t * - `atQueueEnd`: is animation caught up to the end of the battle queue, waiting for more input?\r\n\t * - `seeking`: are we trying to skip to a specific turn\r\n\t * - `turn`: what turn are we currently on? `-1` if we haven't started yet, `0` at team preview\r\n\t * - `paused`: are we playing at all?\r\n\t */\r\n\tplay() {\r\n\t\tthis.paused = false;\r\n\t\tthis.started = true;\r\n\t\tthis.scene.resume();\r\n\t\tthis.nextStep();\r\n\t\tthis.subscription?.('playing');\r\n\t}\r\n\tskipTurn() {\r\n\t\tthis.seekTurn(this.turn + 1);\r\n\t}\r\n\tseekTurn(turn: number, forceReset?: boolean) {\r\n\t\tif (isNaN(turn)) return;\r\n\t\tturn = Math.max(Math.floor(turn), 0);\r\n\r\n\t\tif (this.seeking !== null && this.seeking > turn && !forceReset) {\r\n\t\t\tthis.seeking = turn;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (turn === 0) {\r\n\t\t\tthis.seeking = null;\r\n\t\t\tthis.resetStep();\r\n\t\t\tthis.scene.animationOn();\r\n\t\t\tif (this.paused) this.subscription?.('paused');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.seeking = turn;\r\n\r\n\t\tif (turn <= this.turn || forceReset) {\r\n\t\t\tthis.scene.animationOff();\r\n\t\t\tthis.resetStep();\r\n\t\t} else if (this.atQueueEnd) {\r\n\t\t\tthis.scene.animationOn();\r\n\t\t\tthis.seeking = null;\r\n\t\t} else {\r\n\t\t\tthis.scene.animationOff();\r\n\t\t\tthis.nextStep();\r\n\t\t}\r\n\t}\r\n\tstopSeeking() {\r\n\t\tthis.seeking = null;\r\n\t\tthis.scene.animationOn();\r\n\t\tthis.subscription?.(this.paused ? 'paused' : 'playing');\r\n\t}\r\n\tshouldStep() {\r\n\t\tif (this.atQueueEnd) return false;\r\n\t\tif (this.seeking !== null) return true;\r\n\t\treturn !(this.paused && this.turn >= 0);\r\n\t}\r\n\tnextStep() {\r\n\t\tif (!this.shouldStep()) return;\r\n\r\n\t\tthis.scene.startAnimations();\r\n\t\tlet animations = undefined;\r\n\r\n\t\tdo {\r\n\t\t\tthis.waitForAnimations = true;\r\n\t\t\tif (this.currentStep >= this.stepQueue.length) {\r\n\t\t\t\tthis.atQueueEnd = true;\r\n\t\t\t\tif (!this.ended && this.isReplay) this.prematureEnd();\r\n\t\t\t\tthis.stopSeeking();\r\n\t\t\t\tif (this.ended) {\r\n\t\t\t\t\tthis.scene.updateBgm();\r\n\t\t\t\t}\r\n\t\t\t\tthis.subscription?.('atqueueend');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.run(this.stepQueue[this.currentStep]);\r\n\t\t\tthis.currentStep++;\r\n\t\t\tif (this.waitForAnimations === true) {\r\n\t\t\t\tanimations = this.scene.finishAnimations();\r\n\t\t\t} else if (this.waitForAnimations === 'simult') {\r\n\t\t\t\tthis.scene.timeOffset = 0;\r\n\t\t\t}\r\n\t\t} while (!animations && this.shouldStep());\r\n\r\n\t\tif (this.paused && this.turn >= 0 && this.seeking === null) {\r\n\t\t\t// initial Play button, team preview\r\n\t\t\tthis.scene.pause();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!animations) return;\r\n\r\n\t\tconst interruptionCount = this.scene.interruptionCount;\r\n\t\tanimations.done(() => {\r\n\t\t\tif (interruptionCount === this.scene.interruptionCount) {\r\n\t\t\t\tthis.nextStep();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tsetQueue(queue: string[]) {\r\n\t\tthis.stepQueue = queue;\r\n\t\tthis.resetStep();\r\n\t}\r\n\r\n\tsetMute(mute: boolean) {\r\n\t\tthis.scene.setMute(mute);\r\n\t}\r\n}\r\n\r\nif (typeof require === 'function') {\r\n\t// in Node\r\n\t(global as any).Battle = Battle;\r\n\t(global as any).Pokemon = Pokemon;\r\n}\r\n"],"file":"battle.js"}